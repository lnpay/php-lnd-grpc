<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chainnotifier.proto

namespace Chainrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>chainrpc.SpendRequest</code>
 */
class SpendRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *The outpoint for which we should request a spend notification for. If set to
     *a zero outpoint, then the spend notification will be requested for the
     *script instead.
     *
     * Generated from protobuf field <code>.chainrpc.Outpoint outpoint = 1;</code>
     */
    protected $outpoint = null;
    /**
     *The output script for the outpoint above. This will be used by light clients
     *to match block filters. If the outpoint is set to a zero outpoint, then a
     *spend notification will be requested for this script instead.
     *
     * Generated from protobuf field <code>bytes script = 2;</code>
     */
    protected $script = '';
    /**
     *The earliest height in the chain for which the outpoint/output script could
     *have been spent. This should in most cases be set to the broadcast height of
     *the outpoint/output script.
     *
     * Generated from protobuf field <code>uint32 height_hint = 3;</code>
     */
    protected $height_hint = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Chainrpc\Outpoint $outpoint
     *          The outpoint for which we should request a spend notification for. If set to
     *          a zero outpoint, then the spend notification will be requested for the
     *          script instead.
     *     @type string $script
     *          The output script for the outpoint above. This will be used by light clients
     *          to match block filters. If the outpoint is set to a zero outpoint, then a
     *          spend notification will be requested for this script instead.
     *     @type int $height_hint
     *          The earliest height in the chain for which the outpoint/output script could
     *          have been spent. This should in most cases be set to the broadcast height of
     *          the outpoint/output script.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chainnotifier::initOnce();
        parent::__construct($data);
    }

    /**
     *The outpoint for which we should request a spend notification for. If set to
     *a zero outpoint, then the spend notification will be requested for the
     *script instead.
     *
     * Generated from protobuf field <code>.chainrpc.Outpoint outpoint = 1;</code>
     * @return \Chainrpc\Outpoint
     */
    public function getOutpoint()
    {
        return isset($this->outpoint) ? $this->outpoint : null;
    }

    public function hasOutpoint()
    {
        return isset($this->outpoint);
    }

    public function clearOutpoint()
    {
        unset($this->outpoint);
    }

    /**
     *The outpoint for which we should request a spend notification for. If set to
     *a zero outpoint, then the spend notification will be requested for the
     *script instead.
     *
     * Generated from protobuf field <code>.chainrpc.Outpoint outpoint = 1;</code>
     * @param \Chainrpc\Outpoint $var
     * @return $this
     */
    public function setOutpoint($var)
    {
        GPBUtil::checkMessage($var, \Chainrpc\Outpoint::class);
        $this->outpoint = $var;

        return $this;
    }

    /**
     *The output script for the outpoint above. This will be used by light clients
     *to match block filters. If the outpoint is set to a zero outpoint, then a
     *spend notification will be requested for this script instead.
     *
     * Generated from protobuf field <code>bytes script = 2;</code>
     * @return string
     */
    public function getScript()
    {
        return $this->script;
    }

    /**
     *The output script for the outpoint above. This will be used by light clients
     *to match block filters. If the outpoint is set to a zero outpoint, then a
     *spend notification will be requested for this script instead.
     *
     * Generated from protobuf field <code>bytes script = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setScript($var)
    {
        GPBUtil::checkString($var, False);
        $this->script = $var;

        return $this;
    }

    /**
     *The earliest height in the chain for which the outpoint/output script could
     *have been spent. This should in most cases be set to the broadcast height of
     *the outpoint/output script.
     *
     * Generated from protobuf field <code>uint32 height_hint = 3;</code>
     * @return int
     */
    public function getHeightHint()
    {
        return $this->height_hint;
    }

    /**
     *The earliest height in the chain for which the outpoint/output script could
     *have been spent. This should in most cases be set to the broadcast height of
     *the outpoint/output script.
     *
     * Generated from protobuf field <code>uint32 height_hint = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setHeightHint($var)
    {
        GPBUtil::checkUint32($var);
        $this->height_hint = $var;

        return $this;
    }

}

