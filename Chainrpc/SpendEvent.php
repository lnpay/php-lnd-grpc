<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chainnotifier.proto

namespace Chainrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>chainrpc.SpendEvent</code>
 */
class SpendEvent extends \Google\Protobuf\Internal\Message
{
    protected $event;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Chainrpc\SpendDetails $spend
     *          An event that includes the details of the spending transaction of the
     *          request (outpoint/output script).
     *     @type \Chainrpc\Reorg $reorg
     *          An event sent when the spending transaction of the request was
     *          reorged out of the chain.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chainnotifier::initOnce();
        parent::__construct($data);
    }

    /**
     *An event that includes the details of the spending transaction of the
     *request (outpoint/output script).
     *
     * Generated from protobuf field <code>.chainrpc.SpendDetails spend = 1;</code>
     * @return \Chainrpc\SpendDetails
     */
    public function getSpend()
    {
        return $this->readOneof(1);
    }

    public function hasSpend()
    {
        return $this->hasOneof(1);
    }

    /**
     *An event that includes the details of the spending transaction of the
     *request (outpoint/output script).
     *
     * Generated from protobuf field <code>.chainrpc.SpendDetails spend = 1;</code>
     * @param \Chainrpc\SpendDetails $var
     * @return $this
     */
    public function setSpend($var)
    {
        GPBUtil::checkMessage($var, \Chainrpc\SpendDetails::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     *An event sent when the spending transaction of the request was
     *reorged out of the chain.
     *
     * Generated from protobuf field <code>.chainrpc.Reorg reorg = 2;</code>
     * @return \Chainrpc\Reorg
     */
    public function getReorg()
    {
        return $this->readOneof(2);
    }

    public function hasReorg()
    {
        return $this->hasOneof(2);
    }

    /**
     *An event sent when the spending transaction of the request was
     *reorged out of the chain.
     *
     * Generated from protobuf field <code>.chainrpc.Reorg reorg = 2;</code>
     * @param \Chainrpc\Reorg $var
     * @return $this
     */
    public function setReorg($var)
    {
        GPBUtil::checkMessage($var, \Chainrpc\Reorg::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getEvent()
    {
        return $this->whichOneof("event");
    }

}

