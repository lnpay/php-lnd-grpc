<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: walletkit.proto

namespace Walletrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>walletrpc.TapscriptPartialReveal</code>
 */
class TapscriptPartialReveal extends \Google\Protobuf\Internal\Message
{
    /**
     * The tap leaf that is known and will be revealed.
     *
     * Generated from protobuf field <code>.walletrpc.TapLeaf revealed_leaf = 1;</code>
     */
    protected $revealed_leaf = null;
    /**
     * The BIP-0341 serialized inclusion proof that is required to prove that
     * the revealed leaf is part of the tree. This contains 0..n blocks of 32
     * bytes. If the tree only contained a single leaf (which is the revealed
     * leaf), this can be empty.
     *
     * Generated from protobuf field <code>bytes full_inclusion_proof = 2;</code>
     */
    protected $full_inclusion_proof = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Walletrpc\TapLeaf $revealed_leaf
     *           The tap leaf that is known and will be revealed.
     *     @type string $full_inclusion_proof
     *           The BIP-0341 serialized inclusion proof that is required to prove that
     *           the revealed leaf is part of the tree. This contains 0..n blocks of 32
     *           bytes. If the tree only contained a single leaf (which is the revealed
     *           leaf), this can be empty.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Walletkit::initOnce();
        parent::__construct($data);
    }

    /**
     * The tap leaf that is known and will be revealed.
     *
     * Generated from protobuf field <code>.walletrpc.TapLeaf revealed_leaf = 1;</code>
     * @return \Walletrpc\TapLeaf|null
     */
    public function getRevealedLeaf()
    {
        return $this->revealed_leaf;
    }

    public function hasRevealedLeaf()
    {
        return isset($this->revealed_leaf);
    }

    public function clearRevealedLeaf()
    {
        unset($this->revealed_leaf);
    }

    /**
     * The tap leaf that is known and will be revealed.
     *
     * Generated from protobuf field <code>.walletrpc.TapLeaf revealed_leaf = 1;</code>
     * @param \Walletrpc\TapLeaf $var
     * @return $this
     */
    public function setRevealedLeaf($var)
    {
        GPBUtil::checkMessage($var, \Walletrpc\TapLeaf::class);
        $this->revealed_leaf = $var;

        return $this;
    }

    /**
     * The BIP-0341 serialized inclusion proof that is required to prove that
     * the revealed leaf is part of the tree. This contains 0..n blocks of 32
     * bytes. If the tree only contained a single leaf (which is the revealed
     * leaf), this can be empty.
     *
     * Generated from protobuf field <code>bytes full_inclusion_proof = 2;</code>
     * @return string
     */
    public function getFullInclusionProof()
    {
        return $this->full_inclusion_proof;
    }

    /**
     * The BIP-0341 serialized inclusion proof that is required to prove that
     * the revealed leaf is part of the tree. This contains 0..n blocks of 32
     * bytes. If the tree only contained a single leaf (which is the revealed
     * leaf), this can be empty.
     *
     * Generated from protobuf field <code>bytes full_inclusion_proof = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFullInclusionProof($var)
    {
        GPBUtil::checkString($var, False);
        $this->full_inclusion_proof = $var;

        return $this;
    }

}

