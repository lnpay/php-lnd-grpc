<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: walletkit.proto

namespace Walletrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>walletrpc.AddressProperty</code>
 */
class AddressProperty extends \Google\Protobuf\Internal\Message
{
    /**
     *The address encoded using the appropriate format depending on the
     *address type (base58, bech32, bech32m).
     *Note that lnd's internal/custom keys for channels and other
     *functionality are derived from the same scope. Since they
     *aren't really used as addresses and will never have an
     *on-chain balance, we'll show the public key instead (only if
     *the show_custom_accounts flag is provided).
     *
     * Generated from protobuf field <code>string address = 1;</code>
     */
    protected $address = '';
    /**
     * Denotes if the address is a change address.
     *
     * Generated from protobuf field <code>bool is_internal = 2;</code>
     */
    protected $is_internal = false;
    /**
     * The balance of the address.
     *
     * Generated from protobuf field <code>int64 balance = 3;</code>
     */
    protected $balance = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $address
     *          The address encoded using the appropriate format depending on the
     *          address type (base58, bech32, bech32m).
     *          Note that lnd's internal/custom keys for channels and other
     *          functionality are derived from the same scope. Since they
     *          aren't really used as addresses and will never have an
     *          on-chain balance, we'll show the public key instead (only if
     *          the show_custom_accounts flag is provided).
     *     @type bool $is_internal
     *           Denotes if the address is a change address.
     *     @type int|string $balance
     *           The balance of the address.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Walletkit::initOnce();
        parent::__construct($data);
    }

    /**
     *The address encoded using the appropriate format depending on the
     *address type (base58, bech32, bech32m).
     *Note that lnd's internal/custom keys for channels and other
     *functionality are derived from the same scope. Since they
     *aren't really used as addresses and will never have an
     *on-chain balance, we'll show the public key instead (only if
     *the show_custom_accounts flag is provided).
     *
     * Generated from protobuf field <code>string address = 1;</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     *The address encoded using the appropriate format depending on the
     *address type (base58, bech32, bech32m).
     *Note that lnd's internal/custom keys for channels and other
     *functionality are derived from the same scope. Since they
     *aren't really used as addresses and will never have an
     *on-chain balance, we'll show the public key instead (only if
     *the show_custom_accounts flag is provided).
     *
     * Generated from protobuf field <code>string address = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->address = $var;

        return $this;
    }

    /**
     * Denotes if the address is a change address.
     *
     * Generated from protobuf field <code>bool is_internal = 2;</code>
     * @return bool
     */
    public function getIsInternal()
    {
        return $this->is_internal;
    }

    /**
     * Denotes if the address is a change address.
     *
     * Generated from protobuf field <code>bool is_internal = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsInternal($var)
    {
        GPBUtil::checkBool($var);
        $this->is_internal = $var;

        return $this;
    }

    /**
     * The balance of the address.
     *
     * Generated from protobuf field <code>int64 balance = 3;</code>
     * @return int|string
     */
    public function getBalance()
    {
        return $this->balance;
    }

    /**
     * The balance of the address.
     *
     * Generated from protobuf field <code>int64 balance = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBalance($var)
    {
        GPBUtil::checkInt64($var);
        $this->balance = $var;

        return $this;
    }

}

