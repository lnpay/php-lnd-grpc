<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: walletkit.proto

namespace Walletrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>walletrpc.SendOutputsRequest</code>
 */
class SendOutputsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *The number of satoshis per kilo weight that should be used when crafting
     *this transaction.
     *
     * Generated from protobuf field <code>int64 sat_per_kw = 1;</code>
     */
    protected $sat_per_kw = 0;
    /**
     *A slice of the outputs that should be created in the transaction produced.
     *
     * Generated from protobuf field <code>repeated .signrpc.TxOut outputs = 2;</code>
     */
    private $outputs;
    /**
     * An optional label for the transaction, limited to 500 characters.
     *
     * Generated from protobuf field <code>string label = 3;</code>
     */
    protected $label = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $sat_per_kw
     *          The number of satoshis per kilo weight that should be used when crafting
     *          this transaction.
     *     @type \Signrpc\TxOut[]|\Google\Protobuf\Internal\RepeatedField $outputs
     *          A slice of the outputs that should be created in the transaction produced.
     *     @type string $label
     *           An optional label for the transaction, limited to 500 characters.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Walletkit::initOnce();
        parent::__construct($data);
    }

    /**
     *The number of satoshis per kilo weight that should be used when crafting
     *this transaction.
     *
     * Generated from protobuf field <code>int64 sat_per_kw = 1;</code>
     * @return int|string
     */
    public function getSatPerKw()
    {
        return $this->sat_per_kw;
    }

    /**
     *The number of satoshis per kilo weight that should be used when crafting
     *this transaction.
     *
     * Generated from protobuf field <code>int64 sat_per_kw = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSatPerKw($var)
    {
        GPBUtil::checkInt64($var);
        $this->sat_per_kw = $var;

        return $this;
    }

    /**
     *A slice of the outputs that should be created in the transaction produced.
     *
     * Generated from protobuf field <code>repeated .signrpc.TxOut outputs = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getOutputs()
    {
        return $this->outputs;
    }

    /**
     *A slice of the outputs that should be created in the transaction produced.
     *
     * Generated from protobuf field <code>repeated .signrpc.TxOut outputs = 2;</code>
     * @param \Signrpc\TxOut[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setOutputs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Signrpc\TxOut::class);
        $this->outputs = $arr;

        return $this;
    }

    /**
     * An optional label for the transaction, limited to 500 characters.
     *
     * Generated from protobuf field <code>string label = 3;</code>
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * An optional label for the transaction, limited to 500 characters.
     *
     * Generated from protobuf field <code>string label = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->label = $var;

        return $this;
    }

}

