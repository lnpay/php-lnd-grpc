<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: walletkit.proto

namespace Walletrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>walletrpc.UtxoLease</code>
 */
class UtxoLease extends \Google\Protobuf\Internal\Message
{
    /**
     *A 32 byte random ID that identifies the lease.
     *
     * Generated from protobuf field <code>bytes id = 1;</code>
     */
    protected $id = '';
    /**
     * The identifying outpoint of the output being leased.
     *
     * Generated from protobuf field <code>.lnrpc.OutPoint outpoint = 2;</code>
     */
    protected $outpoint = null;
    /**
     *The absolute expiration of the output lease represented as a unix timestamp.
     *
     * Generated from protobuf field <code>uint64 expiration = 3;</code>
     */
    protected $expiration = 0;
    /**
     *The public key script of the leased output.
     *
     * Generated from protobuf field <code>bytes pk_script = 4;</code>
     */
    protected $pk_script = '';
    /**
     *The value of the leased output in satoshis.
     *
     * Generated from protobuf field <code>uint64 value = 5;</code>
     */
    protected $value = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *          A 32 byte random ID that identifies the lease.
     *     @type \Lnrpc\OutPoint $outpoint
     *           The identifying outpoint of the output being leased.
     *     @type int|string $expiration
     *          The absolute expiration of the output lease represented as a unix timestamp.
     *     @type string $pk_script
     *          The public key script of the leased output.
     *     @type int|string $value
     *          The value of the leased output in satoshis.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Walletkit::initOnce();
        parent::__construct($data);
    }

    /**
     *A 32 byte random ID that identifies the lease.
     *
     * Generated from protobuf field <code>bytes id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     *A 32 byte random ID that identifies the lease.
     *
     * Generated from protobuf field <code>bytes id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, False);
        $this->id = $var;

        return $this;
    }

    /**
     * The identifying outpoint of the output being leased.
     *
     * Generated from protobuf field <code>.lnrpc.OutPoint outpoint = 2;</code>
     * @return \Lnrpc\OutPoint|null
     */
    public function getOutpoint()
    {
        return $this->outpoint;
    }

    public function hasOutpoint()
    {
        return isset($this->outpoint);
    }

    public function clearOutpoint()
    {
        unset($this->outpoint);
    }

    /**
     * The identifying outpoint of the output being leased.
     *
     * Generated from protobuf field <code>.lnrpc.OutPoint outpoint = 2;</code>
     * @param \Lnrpc\OutPoint $var
     * @return $this
     */
    public function setOutpoint($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\OutPoint::class);
        $this->outpoint = $var;

        return $this;
    }

    /**
     *The absolute expiration of the output lease represented as a unix timestamp.
     *
     * Generated from protobuf field <code>uint64 expiration = 3;</code>
     * @return int|string
     */
    public function getExpiration()
    {
        return $this->expiration;
    }

    /**
     *The absolute expiration of the output lease represented as a unix timestamp.
     *
     * Generated from protobuf field <code>uint64 expiration = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setExpiration($var)
    {
        GPBUtil::checkUint64($var);
        $this->expiration = $var;

        return $this;
    }

    /**
     *The public key script of the leased output.
     *
     * Generated from protobuf field <code>bytes pk_script = 4;</code>
     * @return string
     */
    public function getPkScript()
    {
        return $this->pk_script;
    }

    /**
     *The public key script of the leased output.
     *
     * Generated from protobuf field <code>bytes pk_script = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPkScript($var)
    {
        GPBUtil::checkString($var, False);
        $this->pk_script = $var;

        return $this;
    }

    /**
     *The value of the leased output in satoshis.
     *
     * Generated from protobuf field <code>uint64 value = 5;</code>
     * @return int|string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     *The value of the leased output in satoshis.
     *
     * Generated from protobuf field <code>uint64 value = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkUint64($var);
        $this->value = $var;

        return $this;
    }

}

