<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: signer.proto

namespace Signrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>signrpc.SharedKeyRequest</code>
 */
class SharedKeyRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The ephemeral public key to use for the DH key derivation.
     *
     * Generated from protobuf field <code>bytes ephemeral_pubkey = 1;</code>
     */
    private $ephemeral_pubkey = '';
    /**
     *Deprecated. The optional key locator of the local key that should be used.
     *If this parameter is not set then the node's identity private key will be
     *used.
     *
     * Generated from protobuf field <code>.signrpc.KeyLocator key_loc = 2 [deprecated = true];</code>
     */
    private $key_loc = null;
    /**
     *A key descriptor describes the key used for performing ECDH. Either a key
     *locator or a raw public key is expected, if neither is supplied, defaults to
     *the node's identity private key.
     *
     * Generated from protobuf field <code>.signrpc.KeyDescriptor key_desc = 3;</code>
     */
    private $key_desc = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $ephemeral_pubkey
     *           The ephemeral public key to use for the DH key derivation.
     *     @type \Signrpc\KeyLocator $key_loc
     *          Deprecated. The optional key locator of the local key that should be used.
     *          If this parameter is not set then the node's identity private key will be
     *          used.
     *     @type \Signrpc\KeyDescriptor $key_desc
     *          A key descriptor describes the key used for performing ECDH. Either a key
     *          locator or a raw public key is expected, if neither is supplied, defaults to
     *          the node's identity private key.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Signer::initOnce();
        parent::__construct($data);
    }

    /**
     * The ephemeral public key to use for the DH key derivation.
     *
     * Generated from protobuf field <code>bytes ephemeral_pubkey = 1;</code>
     * @return string
     */
    public function getEphemeralPubkey()
    {
        return $this->ephemeral_pubkey;
    }

    /**
     * The ephemeral public key to use for the DH key derivation.
     *
     * Generated from protobuf field <code>bytes ephemeral_pubkey = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setEphemeralPubkey($var)
    {
        GPBUtil::checkString($var, False);
        $this->ephemeral_pubkey = $var;

        return $this;
    }

    /**
     *Deprecated. The optional key locator of the local key that should be used.
     *If this parameter is not set then the node's identity private key will be
     *used.
     *
     * Generated from protobuf field <code>.signrpc.KeyLocator key_loc = 2 [deprecated = true];</code>
     * @return \Signrpc\KeyLocator
     */
    public function getKeyLoc()
    {
        return $this->key_loc;
    }

    /**
     *Deprecated. The optional key locator of the local key that should be used.
     *If this parameter is not set then the node's identity private key will be
     *used.
     *
     * Generated from protobuf field <code>.signrpc.KeyLocator key_loc = 2 [deprecated = true];</code>
     * @param \Signrpc\KeyLocator $var
     * @return $this
     */
    public function setKeyLoc($var)
    {
        GPBUtil::checkMessage($var, \Signrpc\KeyLocator::class);
        $this->key_loc = $var;

        return $this;
    }

    /**
     *A key descriptor describes the key used for performing ECDH. Either a key
     *locator or a raw public key is expected, if neither is supplied, defaults to
     *the node's identity private key.
     *
     * Generated from protobuf field <code>.signrpc.KeyDescriptor key_desc = 3;</code>
     * @return \Signrpc\KeyDescriptor
     */
    public function getKeyDesc()
    {
        return $this->key_desc;
    }

    /**
     *A key descriptor describes the key used for performing ECDH. Either a key
     *locator or a raw public key is expected, if neither is supplied, defaults to
     *the node's identity private key.
     *
     * Generated from protobuf field <code>.signrpc.KeyDescriptor key_desc = 3;</code>
     * @param \Signrpc\KeyDescriptor $var
     * @return $this
     */
    public function setKeyDesc($var)
    {
        GPBUtil::checkMessage($var, \Signrpc\KeyDescriptor::class);
        $this->key_desc = $var;

        return $this;
    }

}

