<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: signer.proto

namespace Signrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>signrpc.MuSig2CombineKeysRequest</code>
 */
class MuSig2CombineKeysRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *A list of all public keys (serialized in 32-byte x-only format for v0.4.0
     *and 33-byte compressed format for v1.0.0rc2!) participating in the signing
     *session. The list will always be sorted lexicographically internally. This
     *must include the local key which is described by the above key_loc.
     *
     * Generated from protobuf field <code>repeated bytes all_signer_pubkeys = 1;</code>
     */
    private $all_signer_pubkeys;
    /**
     *A series of optional generic tweaks to be applied to the the aggregated
     *public key.
     *
     * Generated from protobuf field <code>repeated .signrpc.TweakDesc tweaks = 2;</code>
     */
    private $tweaks;
    /**
     *An optional taproot specific tweak that must be specified if the MuSig2
     *combined key will be used as the main taproot key of a taproot output
     *on-chain.
     *
     * Generated from protobuf field <code>.signrpc.TaprootTweakDesc taproot_tweak = 3;</code>
     */
    protected $taproot_tweak = null;
    /**
     *The mandatory version of the MuSig2 BIP draft to use. This is necessary to
     *differentiate between the changes that were made to the BIP while this
     *experimental RPC was already released. Some of those changes affect how the
     *combined key and nonces are created.
     *
     * Generated from protobuf field <code>.signrpc.MuSig2Version version = 4;</code>
     */
    protected $version = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $all_signer_pubkeys
     *          A list of all public keys (serialized in 32-byte x-only format for v0.4.0
     *          and 33-byte compressed format for v1.0.0rc2!) participating in the signing
     *          session. The list will always be sorted lexicographically internally. This
     *          must include the local key which is described by the above key_loc.
     *     @type array<\Signrpc\TweakDesc>|\Google\Protobuf\Internal\RepeatedField $tweaks
     *          A series of optional generic tweaks to be applied to the the aggregated
     *          public key.
     *     @type \Signrpc\TaprootTweakDesc $taproot_tweak
     *          An optional taproot specific tweak that must be specified if the MuSig2
     *          combined key will be used as the main taproot key of a taproot output
     *          on-chain.
     *     @type int $version
     *          The mandatory version of the MuSig2 BIP draft to use. This is necessary to
     *          differentiate between the changes that were made to the BIP while this
     *          experimental RPC was already released. Some of those changes affect how the
     *          combined key and nonces are created.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Signer::initOnce();
        parent::__construct($data);
    }

    /**
     *A list of all public keys (serialized in 32-byte x-only format for v0.4.0
     *and 33-byte compressed format for v1.0.0rc2!) participating in the signing
     *session. The list will always be sorted lexicographically internally. This
     *must include the local key which is described by the above key_loc.
     *
     * Generated from protobuf field <code>repeated bytes all_signer_pubkeys = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAllSignerPubkeys()
    {
        return $this->all_signer_pubkeys;
    }

    /**
     *A list of all public keys (serialized in 32-byte x-only format for v0.4.0
     *and 33-byte compressed format for v1.0.0rc2!) participating in the signing
     *session. The list will always be sorted lexicographically internally. This
     *must include the local key which is described by the above key_loc.
     *
     * Generated from protobuf field <code>repeated bytes all_signer_pubkeys = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAllSignerPubkeys($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->all_signer_pubkeys = $arr;

        return $this;
    }

    /**
     *A series of optional generic tweaks to be applied to the the aggregated
     *public key.
     *
     * Generated from protobuf field <code>repeated .signrpc.TweakDesc tweaks = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTweaks()
    {
        return $this->tweaks;
    }

    /**
     *A series of optional generic tweaks to be applied to the the aggregated
     *public key.
     *
     * Generated from protobuf field <code>repeated .signrpc.TweakDesc tweaks = 2;</code>
     * @param array<\Signrpc\TweakDesc>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTweaks($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Signrpc\TweakDesc::class);
        $this->tweaks = $arr;

        return $this;
    }

    /**
     *An optional taproot specific tweak that must be specified if the MuSig2
     *combined key will be used as the main taproot key of a taproot output
     *on-chain.
     *
     * Generated from protobuf field <code>.signrpc.TaprootTweakDesc taproot_tweak = 3;</code>
     * @return \Signrpc\TaprootTweakDesc|null
     */
    public function getTaprootTweak()
    {
        return $this->taproot_tweak;
    }

    public function hasTaprootTweak()
    {
        return isset($this->taproot_tweak);
    }

    public function clearTaprootTweak()
    {
        unset($this->taproot_tweak);
    }

    /**
     *An optional taproot specific tweak that must be specified if the MuSig2
     *combined key will be used as the main taproot key of a taproot output
     *on-chain.
     *
     * Generated from protobuf field <code>.signrpc.TaprootTweakDesc taproot_tweak = 3;</code>
     * @param \Signrpc\TaprootTweakDesc $var
     * @return $this
     */
    public function setTaprootTweak($var)
    {
        GPBUtil::checkMessage($var, \Signrpc\TaprootTweakDesc::class);
        $this->taproot_tweak = $var;

        return $this;
    }

    /**
     *The mandatory version of the MuSig2 BIP draft to use. This is necessary to
     *differentiate between the changes that were made to the BIP while this
     *experimental RPC was already released. Some of those changes affect how the
     *combined key and nonces are created.
     *
     * Generated from protobuf field <code>.signrpc.MuSig2Version version = 4;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     *The mandatory version of the MuSig2 BIP draft to use. This is necessary to
     *differentiate between the changes that were made to the BIP while this
     *experimental RPC was already released. Some of those changes affect how the
     *combined key and nonces are created.
     *
     * Generated from protobuf field <code>.signrpc.MuSig2Version version = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkEnum($var, \Signrpc\MuSig2Version::class);
        $this->version = $var;

        return $this;
    }

}

