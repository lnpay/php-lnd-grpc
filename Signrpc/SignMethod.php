<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: signer.proto

namespace Signrpc;

use UnexpectedValueException;

/**
 * Protobuf type <code>signrpc.SignMethod</code>
 */
class SignMethod
{
    /**
     *Specifies that a SegWit v0 (p2wkh, np2wkh, p2wsh) input script should be
     *signed.
     *
     * Generated from protobuf enum <code>SIGN_METHOD_WITNESS_V0 = 0;</code>
     */
    const SIGN_METHOD_WITNESS_V0 = 0;
    /**
     *Specifies that a SegWit v1 (p2tr) input should be signed by using the
     *BIP0086 method (commit to internal key only).
     *
     * Generated from protobuf enum <code>SIGN_METHOD_TAPROOT_KEY_SPEND_BIP0086 = 1;</code>
     */
    const SIGN_METHOD_TAPROOT_KEY_SPEND_BIP0086 = 1;
    /**
     *Specifies that a SegWit v1 (p2tr) input should be signed by using a given
     *taproot hash to commit to in addition to the internal key.
     *
     * Generated from protobuf enum <code>SIGN_METHOD_TAPROOT_KEY_SPEND = 2;</code>
     */
    const SIGN_METHOD_TAPROOT_KEY_SPEND = 2;
    /**
     *Specifies that a SegWit v1 (p2tr) input should be spent using the script
     *path and that a specific leaf script should be signed for.
     *
     * Generated from protobuf enum <code>SIGN_METHOD_TAPROOT_SCRIPT_SPEND = 3;</code>
     */
    const SIGN_METHOD_TAPROOT_SCRIPT_SPEND = 3;

    private static $valueToName = [
        self::SIGN_METHOD_WITNESS_V0 => 'SIGN_METHOD_WITNESS_V0',
        self::SIGN_METHOD_TAPROOT_KEY_SPEND_BIP0086 => 'SIGN_METHOD_TAPROOT_KEY_SPEND_BIP0086',
        self::SIGN_METHOD_TAPROOT_KEY_SPEND => 'SIGN_METHOD_TAPROOT_KEY_SPEND',
        self::SIGN_METHOD_TAPROOT_SCRIPT_SPEND => 'SIGN_METHOD_TAPROOT_SCRIPT_SPEND',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

