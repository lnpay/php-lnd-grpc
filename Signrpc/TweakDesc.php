<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: signer.proto

namespace Signrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>signrpc.TweakDesc</code>
 */
class TweakDesc extends \Google\Protobuf\Internal\Message
{
    /**
     *Tweak is the 32-byte value that will modify the public key.
     *
     * Generated from protobuf field <code>bytes tweak = 1;</code>
     */
    protected $tweak = '';
    /**
     *Specifies if the target key should be converted to an x-only public key
     *before tweaking. If true, then the public key will be mapped to an x-only
     *key before the tweaking operation is applied.
     *
     * Generated from protobuf field <code>bool is_x_only = 2;</code>
     */
    protected $is_x_only = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $tweak
     *          Tweak is the 32-byte value that will modify the public key.
     *     @type bool $is_x_only
     *          Specifies if the target key should be converted to an x-only public key
     *          before tweaking. If true, then the public key will be mapped to an x-only
     *          key before the tweaking operation is applied.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Signer::initOnce();
        parent::__construct($data);
    }

    /**
     *Tweak is the 32-byte value that will modify the public key.
     *
     * Generated from protobuf field <code>bytes tweak = 1;</code>
     * @return string
     */
    public function getTweak()
    {
        return $this->tweak;
    }

    /**
     *Tweak is the 32-byte value that will modify the public key.
     *
     * Generated from protobuf field <code>bytes tweak = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTweak($var)
    {
        GPBUtil::checkString($var, False);
        $this->tweak = $var;

        return $this;
    }

    /**
     *Specifies if the target key should be converted to an x-only public key
     *before tweaking. If true, then the public key will be mapped to an x-only
     *key before the tweaking operation is applied.
     *
     * Generated from protobuf field <code>bool is_x_only = 2;</code>
     * @return bool
     */
    public function getIsXOnly()
    {
        return $this->is_x_only;
    }

    /**
     *Specifies if the target key should be converted to an x-only public key
     *before tweaking. If true, then the public key will be mapped to an x-only
     *key before the tweaking operation is applied.
     *
     * Generated from protobuf field <code>bool is_x_only = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsXOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->is_x_only = $var;

        return $this;
    }

}

