<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lightning.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.FundingPsbtVerify</code>
 */
class FundingPsbtVerify extends \Google\Protobuf\Internal\Message
{
    /**
     *The funded but not yet signed PSBT that sends the exact channel capacity
     *amount to the PK script returned in the open channel message in a previous
     *step.
     *
     * Generated from protobuf field <code>bytes funded_psbt = 1;</code>
     */
    protected $funded_psbt = '';
    /**
     * The pending channel ID of the channel to get the PSBT for.
     *
     * Generated from protobuf field <code>bytes pending_chan_id = 2;</code>
     */
    protected $pending_chan_id = '';
    /**
     *Can only be used if the no_publish flag was set to true in the OpenChannel
     *call meaning that the caller is solely responsible for publishing the final
     *funding transaction. If skip_finalize is set to true then lnd will not wait
     *for a FundingPsbtFinalize state step and instead assumes that a transaction
     *with the same TXID as the passed in PSBT will eventually confirm.
     *IT IS ABSOLUTELY IMPERATIVE that the TXID of the transaction that is
     *eventually published does have the _same TXID_ as the verified PSBT. That
     *means no inputs or outputs can change, only signatures can be added. If the
     *TXID changes between this call and the publish step then the channel will
     *never be created and the funds will be in limbo.
     *
     * Generated from protobuf field <code>bool skip_finalize = 3;</code>
     */
    protected $skip_finalize = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $funded_psbt
     *          The funded but not yet signed PSBT that sends the exact channel capacity
     *          amount to the PK script returned in the open channel message in a previous
     *          step.
     *     @type string $pending_chan_id
     *           The pending channel ID of the channel to get the PSBT for.
     *     @type bool $skip_finalize
     *          Can only be used if the no_publish flag was set to true in the OpenChannel
     *          call meaning that the caller is solely responsible for publishing the final
     *          funding transaction. If skip_finalize is set to true then lnd will not wait
     *          for a FundingPsbtFinalize state step and instead assumes that a transaction
     *          with the same TXID as the passed in PSBT will eventually confirm.
     *          IT IS ABSOLUTELY IMPERATIVE that the TXID of the transaction that is
     *          eventually published does have the _same TXID_ as the verified PSBT. That
     *          means no inputs or outputs can change, only signatures can be added. If the
     *          TXID changes between this call and the publish step then the channel will
     *          never be created and the funds will be in limbo.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Lightning::initOnce();
        parent::__construct($data);
    }

    /**
     *The funded but not yet signed PSBT that sends the exact channel capacity
     *amount to the PK script returned in the open channel message in a previous
     *step.
     *
     * Generated from protobuf field <code>bytes funded_psbt = 1;</code>
     * @return string
     */
    public function getFundedPsbt()
    {
        return $this->funded_psbt;
    }

    /**
     *The funded but not yet signed PSBT that sends the exact channel capacity
     *amount to the PK script returned in the open channel message in a previous
     *step.
     *
     * Generated from protobuf field <code>bytes funded_psbt = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFundedPsbt($var)
    {
        GPBUtil::checkString($var, False);
        $this->funded_psbt = $var;

        return $this;
    }

    /**
     * The pending channel ID of the channel to get the PSBT for.
     *
     * Generated from protobuf field <code>bytes pending_chan_id = 2;</code>
     * @return string
     */
    public function getPendingChanId()
    {
        return $this->pending_chan_id;
    }

    /**
     * The pending channel ID of the channel to get the PSBT for.
     *
     * Generated from protobuf field <code>bytes pending_chan_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPendingChanId($var)
    {
        GPBUtil::checkString($var, False);
        $this->pending_chan_id = $var;

        return $this;
    }

    /**
     *Can only be used if the no_publish flag was set to true in the OpenChannel
     *call meaning that the caller is solely responsible for publishing the final
     *funding transaction. If skip_finalize is set to true then lnd will not wait
     *for a FundingPsbtFinalize state step and instead assumes that a transaction
     *with the same TXID as the passed in PSBT will eventually confirm.
     *IT IS ABSOLUTELY IMPERATIVE that the TXID of the transaction that is
     *eventually published does have the _same TXID_ as the verified PSBT. That
     *means no inputs or outputs can change, only signatures can be added. If the
     *TXID changes between this call and the publish step then the channel will
     *never be created and the funds will be in limbo.
     *
     * Generated from protobuf field <code>bool skip_finalize = 3;</code>
     * @return bool
     */
    public function getSkipFinalize()
    {
        return $this->skip_finalize;
    }

    /**
     *Can only be used if the no_publish flag was set to true in the OpenChannel
     *call meaning that the caller is solely responsible for publishing the final
     *funding transaction. If skip_finalize is set to true then lnd will not wait
     *for a FundingPsbtFinalize state step and instead assumes that a transaction
     *with the same TXID as the passed in PSBT will eventually confirm.
     *IT IS ABSOLUTELY IMPERATIVE that the TXID of the transaction that is
     *eventually published does have the _same TXID_ as the verified PSBT. That
     *means no inputs or outputs can change, only signatures can be added. If the
     *TXID changes between this call and the publish step then the channel will
     *never be created and the funds will be in limbo.
     *
     * Generated from protobuf field <code>bool skip_finalize = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setSkipFinalize($var)
    {
        GPBUtil::checkBool($var);
        $this->skip_finalize = $var;

        return $this;
    }

}

