<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lightning.proto

namespace Lnrpc;

use UnexpectedValueException;

/**
 * Protobuf type <code>lnrpc.ResolutionType</code>
 */
class ResolutionType
{
    /**
     * Generated from protobuf enum <code>TYPE_UNKNOWN = 0;</code>
     */
    const TYPE_UNKNOWN = 0;
    /**
     * We resolved an anchor output.
     *
     * Generated from protobuf enum <code>ANCHOR = 1;</code>
     */
    const ANCHOR = 1;
    /**
     *We are resolving an incoming htlc on chain. This if this htlc is
     *claimed, we swept the incoming htlc with the preimage. If it is timed
     *out, our peer swept the timeout path.
     *
     * Generated from protobuf enum <code>INCOMING_HTLC = 2;</code>
     */
    const INCOMING_HTLC = 2;
    /**
     *We are resolving an outgoing htlc on chain. If this htlc is claimed,
     *the remote party swept the htlc with the preimage. If it is timed out,
     *we swept it with the timeout path.
     *
     * Generated from protobuf enum <code>OUTGOING_HTLC = 3;</code>
     */
    const OUTGOING_HTLC = 3;
    /**
     * We force closed and need to sweep our time locked commitment output.
     *
     * Generated from protobuf enum <code>COMMIT = 4;</code>
     */
    const COMMIT = 4;

    private static $valueToName = [
        self::TYPE_UNKNOWN => 'TYPE_UNKNOWN',
        self::ANCHOR => 'ANCHOR',
        self::INCOMING_HTLC => 'INCOMING_HTLC',
        self::OUTGOING_HTLC => 'OUTGOING_HTLC',
        self::COMMIT => 'COMMIT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

