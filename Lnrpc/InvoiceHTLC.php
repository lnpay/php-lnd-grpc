<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details of an HTLC that paid to an invoice
 *
 * Generated from protobuf message <code>lnrpc.InvoiceHTLC</code>
 */
class InvoiceHTLC extends \Google\Protobuf\Internal\Message
{
    /**
     * Short channel id over which the htlc was received.
     *
     * Generated from protobuf field <code>uint64 chan_id = 1 [jstype = JS_STRING];</code>
     */
    protected $chan_id = 0;
    /**
     * Index identifying the htlc on the channel.
     *
     * Generated from protobuf field <code>uint64 htlc_index = 2;</code>
     */
    protected $htlc_index = 0;
    /**
     * The amount of the htlc in msat.
     *
     * Generated from protobuf field <code>uint64 amt_msat = 3;</code>
     */
    protected $amt_msat = 0;
    /**
     * Block height at which this htlc was accepted.
     *
     * Generated from protobuf field <code>int32 accept_height = 4;</code>
     */
    protected $accept_height = 0;
    /**
     * Time at which this htlc was accepted.
     *
     * Generated from protobuf field <code>int64 accept_time = 5;</code>
     */
    protected $accept_time = 0;
    /**
     * Time at which this htlc was settled or canceled.
     *
     * Generated from protobuf field <code>int64 resolve_time = 6;</code>
     */
    protected $resolve_time = 0;
    /**
     * Block height at which this htlc expires.
     *
     * Generated from protobuf field <code>int32 expiry_height = 7;</code>
     */
    protected $expiry_height = 0;
    /**
     * Current state the htlc is in.
     *
     * Generated from protobuf field <code>.lnrpc.InvoiceHTLCState state = 8;</code>
     */
    protected $state = 0;
    /**
     * Custom tlv records.
     *
     * Generated from protobuf field <code>map<uint64, bytes> custom_records = 9;</code>
     */
    private $custom_records;
    /**
     * The total amount of the mpp payment in msat.
     *
     * Generated from protobuf field <code>uint64 mpp_total_amt_msat = 10;</code>
     */
    protected $mpp_total_amt_msat = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $chan_id
     *           Short channel id over which the htlc was received.
     *     @type int|string $htlc_index
     *           Index identifying the htlc on the channel.
     *     @type int|string $amt_msat
     *           The amount of the htlc in msat.
     *     @type int $accept_height
     *           Block height at which this htlc was accepted.
     *     @type int|string $accept_time
     *           Time at which this htlc was accepted.
     *     @type int|string $resolve_time
     *           Time at which this htlc was settled or canceled.
     *     @type int $expiry_height
     *           Block height at which this htlc expires.
     *     @type int $state
     *           Current state the htlc is in.
     *     @type array|\Google\Protobuf\Internal\MapField $custom_records
     *           Custom tlv records.
     *     @type int|string $mpp_total_amt_msat
     *           The total amount of the mpp payment in msat.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     * Short channel id over which the htlc was received.
     *
     * Generated from protobuf field <code>uint64 chan_id = 1 [jstype = JS_STRING];</code>
     * @return int|string
     */
    public function getChanId()
    {
        return $this->chan_id;
    }

    /**
     * Short channel id over which the htlc was received.
     *
     * Generated from protobuf field <code>uint64 chan_id = 1 [jstype = JS_STRING];</code>
     * @param int|string $var
     * @return $this
     */
    public function setChanId($var)
    {
        GPBUtil::checkUint64($var);
        $this->chan_id = $var;

        return $this;
    }

    /**
     * Index identifying the htlc on the channel.
     *
     * Generated from protobuf field <code>uint64 htlc_index = 2;</code>
     * @return int|string
     */
    public function getHtlcIndex()
    {
        return $this->htlc_index;
    }

    /**
     * Index identifying the htlc on the channel.
     *
     * Generated from protobuf field <code>uint64 htlc_index = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setHtlcIndex($var)
    {
        GPBUtil::checkUint64($var);
        $this->htlc_index = $var;

        return $this;
    }

    /**
     * The amount of the htlc in msat.
     *
     * Generated from protobuf field <code>uint64 amt_msat = 3;</code>
     * @return int|string
     */
    public function getAmtMsat()
    {
        return $this->amt_msat;
    }

    /**
     * The amount of the htlc in msat.
     *
     * Generated from protobuf field <code>uint64 amt_msat = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmtMsat($var)
    {
        GPBUtil::checkUint64($var);
        $this->amt_msat = $var;

        return $this;
    }

    /**
     * Block height at which this htlc was accepted.
     *
     * Generated from protobuf field <code>int32 accept_height = 4;</code>
     * @return int
     */
    public function getAcceptHeight()
    {
        return $this->accept_height;
    }

    /**
     * Block height at which this htlc was accepted.
     *
     * Generated from protobuf field <code>int32 accept_height = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setAcceptHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->accept_height = $var;

        return $this;
    }

    /**
     * Time at which this htlc was accepted.
     *
     * Generated from protobuf field <code>int64 accept_time = 5;</code>
     * @return int|string
     */
    public function getAcceptTime()
    {
        return $this->accept_time;
    }

    /**
     * Time at which this htlc was accepted.
     *
     * Generated from protobuf field <code>int64 accept_time = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAcceptTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->accept_time = $var;

        return $this;
    }

    /**
     * Time at which this htlc was settled or canceled.
     *
     * Generated from protobuf field <code>int64 resolve_time = 6;</code>
     * @return int|string
     */
    public function getResolveTime()
    {
        return $this->resolve_time;
    }

    /**
     * Time at which this htlc was settled or canceled.
     *
     * Generated from protobuf field <code>int64 resolve_time = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setResolveTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->resolve_time = $var;

        return $this;
    }

    /**
     * Block height at which this htlc expires.
     *
     * Generated from protobuf field <code>int32 expiry_height = 7;</code>
     * @return int
     */
    public function getExpiryHeight()
    {
        return $this->expiry_height;
    }

    /**
     * Block height at which this htlc expires.
     *
     * Generated from protobuf field <code>int32 expiry_height = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setExpiryHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->expiry_height = $var;

        return $this;
    }

    /**
     * Current state the htlc is in.
     *
     * Generated from protobuf field <code>.lnrpc.InvoiceHTLCState state = 8;</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Current state the htlc is in.
     *
     * Generated from protobuf field <code>.lnrpc.InvoiceHTLCState state = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Lnrpc\InvoiceHTLCState::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Custom tlv records.
     *
     * Generated from protobuf field <code>map<uint64, bytes> custom_records = 9;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getCustomRecords()
    {
        return $this->custom_records;
    }

    /**
     * Custom tlv records.
     *
     * Generated from protobuf field <code>map<uint64, bytes> custom_records = 9;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setCustomRecords($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::UINT64, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->custom_records = $arr;

        return $this;
    }

    /**
     * The total amount of the mpp payment in msat.
     *
     * Generated from protobuf field <code>uint64 mpp_total_amt_msat = 10;</code>
     * @return int|string
     */
    public function getMppTotalAmtMsat()
    {
        return $this->mpp_total_amt_msat;
    }

    /**
     * The total amount of the mpp payment in msat.
     *
     * Generated from protobuf field <code>uint64 mpp_total_amt_msat = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMppTotalAmtMsat($var)
    {
        GPBUtil::checkUint64($var);
        $this->mpp_total_amt_msat = $var;

        return $this;
    }

}

