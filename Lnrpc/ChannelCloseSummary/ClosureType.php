<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lightning.proto

namespace Lnrpc\ChannelCloseSummary;

use UnexpectedValueException;

/**
 * Protobuf type <code>lnrpc.ChannelCloseSummary.ClosureType</code>
 */
class ClosureType
{
    /**
     * Generated from protobuf enum <code>COOPERATIVE_CLOSE = 0;</code>
     */
    const COOPERATIVE_CLOSE = 0;
    /**
     * Generated from protobuf enum <code>LOCAL_FORCE_CLOSE = 1;</code>
     */
    const LOCAL_FORCE_CLOSE = 1;
    /**
     * Generated from protobuf enum <code>REMOTE_FORCE_CLOSE = 2;</code>
     */
    const REMOTE_FORCE_CLOSE = 2;
    /**
     * Generated from protobuf enum <code>BREACH_CLOSE = 3;</code>
     */
    const BREACH_CLOSE = 3;
    /**
     * Generated from protobuf enum <code>FUNDING_CANCELED = 4;</code>
     */
    const FUNDING_CANCELED = 4;
    /**
     * Generated from protobuf enum <code>ABANDONED = 5;</code>
     */
    const ABANDONED = 5;

    private static $valueToName = [
        self::COOPERATIVE_CLOSE => 'COOPERATIVE_CLOSE',
        self::LOCAL_FORCE_CLOSE => 'LOCAL_FORCE_CLOSE',
        self::REMOTE_FORCE_CLOSE => 'REMOTE_FORCE_CLOSE',
        self::BREACH_CLOSE => 'BREACH_CLOSE',
        self::FUNDING_CANCELED => 'FUNDING_CANCELED',
        self::ABANDONED => 'ABANDONED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ClosureType::class, \Lnrpc\ChannelCloseSummary_ClosureType::class);

