<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.NodePair</code>
 */
class NodePair extends \Google\Protobuf\Internal\Message
{
    /**
     **
     *The sending node of the pair. When using REST, this field must be encoded as
     *base64.
     *
     * Generated from protobuf field <code>bytes from = 1;</code>
     */
    private $from = '';
    /**
     **
     *The receiving node of the pair. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes to = 2;</code>
     */
    private $to = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $from
     *          *
     *          The sending node of the pair. When using REST, this field must be encoded as
     *          base64.
     *     @type string $to
     *          *
     *          The receiving node of the pair. When using REST, this field must be encoded
     *          as base64.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     **
     *The sending node of the pair. When using REST, this field must be encoded as
     *base64.
     *
     * Generated from protobuf field <code>bytes from = 1;</code>
     * @return string
     */
    public function getFrom()
    {
        return $this->from;
    }

    /**
     **
     *The sending node of the pair. When using REST, this field must be encoded as
     *base64.
     *
     * Generated from protobuf field <code>bytes from = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFrom($var)
    {
        GPBUtil::checkString($var, False);
        $this->from = $var;

        return $this;
    }

    /**
     **
     *The receiving node of the pair. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes to = 2;</code>
     * @return string
     */
    public function getTo()
    {
        return $this->to;
    }

    /**
     **
     *The receiving node of the pair. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes to = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTo($var)
    {
        GPBUtil::checkString($var, False);
        $this->to = $var;

        return $this;
    }

}

