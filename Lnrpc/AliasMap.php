<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lightning.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.AliasMap</code>
 */
class AliasMap extends \Google\Protobuf\Internal\Message
{
    /**
     *For non-zero-conf channels, this is the confirmed SCID. Otherwise, this is
     *the first assigned "base" alias.
     *
     * Generated from protobuf field <code>uint64 base_scid = 1;</code>
     */
    protected $base_scid = 0;
    /**
     * The set of all aliases stored for the base SCID.
     *
     * Generated from protobuf field <code>repeated uint64 aliases = 2;</code>
     */
    private $aliases;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $base_scid
     *          For non-zero-conf channels, this is the confirmed SCID. Otherwise, this is
     *          the first assigned "base" alias.
     *     @type array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $aliases
     *           The set of all aliases stored for the base SCID.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Lightning::initOnce();
        parent::__construct($data);
    }

    /**
     *For non-zero-conf channels, this is the confirmed SCID. Otherwise, this is
     *the first assigned "base" alias.
     *
     * Generated from protobuf field <code>uint64 base_scid = 1;</code>
     * @return int|string
     */
    public function getBaseScid()
    {
        return $this->base_scid;
    }

    /**
     *For non-zero-conf channels, this is the confirmed SCID. Otherwise, this is
     *the first assigned "base" alias.
     *
     * Generated from protobuf field <code>uint64 base_scid = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBaseScid($var)
    {
        GPBUtil::checkUint64($var);
        $this->base_scid = $var;

        return $this;
    }

    /**
     * The set of all aliases stored for the base SCID.
     *
     * Generated from protobuf field <code>repeated uint64 aliases = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAliases()
    {
        return $this->aliases;
    }

    /**
     * The set of all aliases stored for the base SCID.
     *
     * Generated from protobuf field <code>repeated uint64 aliases = 2;</code>
     * @param array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAliases($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::UINT64);
        $this->aliases = $arr;

        return $this;
    }

}

