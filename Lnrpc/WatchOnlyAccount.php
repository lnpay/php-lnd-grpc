<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: walletunlocker.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.WatchOnlyAccount</code>
 */
class WatchOnlyAccount extends \Google\Protobuf\Internal\Message
{
    /**
     *Purpose is the first number in the derivation path, must be either 49, 84
     *or 1017.
     *
     * Generated from protobuf field <code>uint32 purpose = 1;</code>
     */
    protected $purpose = 0;
    /**
     *Coin type is the second number in the derivation path, this is _always_ 0
     *for purposes 49 and 84. It only needs to be set to 1 for purpose 1017 on
     *testnet or regtest.
     *
     * Generated from protobuf field <code>uint32 coin_type = 2;</code>
     */
    protected $coin_type = 0;
    /**
     *Account is the third number in the derivation path. For purposes 49 and 84
     *at least the default account (index 0) needs to be created but optional
     *additional accounts are allowed. For purpose 1017 there needs to be exactly
     *one account for each of the key families defined in `keychain/derivation.go`
     *(currently indices 0 to 9)
     *
     * Generated from protobuf field <code>uint32 account = 3;</code>
     */
    protected $account = 0;
    /**
     *The extended public key at depth 3 for the given account.
     *
     * Generated from protobuf field <code>string xpub = 4;</code>
     */
    protected $xpub = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $purpose
     *          Purpose is the first number in the derivation path, must be either 49, 84
     *          or 1017.
     *     @type int $coin_type
     *          Coin type is the second number in the derivation path, this is _always_ 0
     *          for purposes 49 and 84. It only needs to be set to 1 for purpose 1017 on
     *          testnet or regtest.
     *     @type int $account
     *          Account is the third number in the derivation path. For purposes 49 and 84
     *          at least the default account (index 0) needs to be created but optional
     *          additional accounts are allowed. For purpose 1017 there needs to be exactly
     *          one account for each of the key families defined in `keychain/derivation.go`
     *          (currently indices 0 to 9)
     *     @type string $xpub
     *          The extended public key at depth 3 for the given account.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Walletunlocker::initOnce();
        parent::__construct($data);
    }

    /**
     *Purpose is the first number in the derivation path, must be either 49, 84
     *or 1017.
     *
     * Generated from protobuf field <code>uint32 purpose = 1;</code>
     * @return int
     */
    public function getPurpose()
    {
        return $this->purpose;
    }

    /**
     *Purpose is the first number in the derivation path, must be either 49, 84
     *or 1017.
     *
     * Generated from protobuf field <code>uint32 purpose = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setPurpose($var)
    {
        GPBUtil::checkUint32($var);
        $this->purpose = $var;

        return $this;
    }

    /**
     *Coin type is the second number in the derivation path, this is _always_ 0
     *for purposes 49 and 84. It only needs to be set to 1 for purpose 1017 on
     *testnet or regtest.
     *
     * Generated from protobuf field <code>uint32 coin_type = 2;</code>
     * @return int
     */
    public function getCoinType()
    {
        return $this->coin_type;
    }

    /**
     *Coin type is the second number in the derivation path, this is _always_ 0
     *for purposes 49 and 84. It only needs to be set to 1 for purpose 1017 on
     *testnet or regtest.
     *
     * Generated from protobuf field <code>uint32 coin_type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setCoinType($var)
    {
        GPBUtil::checkUint32($var);
        $this->coin_type = $var;

        return $this;
    }

    /**
     *Account is the third number in the derivation path. For purposes 49 and 84
     *at least the default account (index 0) needs to be created but optional
     *additional accounts are allowed. For purpose 1017 there needs to be exactly
     *one account for each of the key families defined in `keychain/derivation.go`
     *(currently indices 0 to 9)
     *
     * Generated from protobuf field <code>uint32 account = 3;</code>
     * @return int
     */
    public function getAccount()
    {
        return $this->account;
    }

    /**
     *Account is the third number in the derivation path. For purposes 49 and 84
     *at least the default account (index 0) needs to be created but optional
     *additional accounts are allowed. For purpose 1017 there needs to be exactly
     *one account for each of the key families defined in `keychain/derivation.go`
     *(currently indices 0 to 9)
     *
     * Generated from protobuf field <code>uint32 account = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkUint32($var);
        $this->account = $var;

        return $this;
    }

    /**
     *The extended public key at depth 3 for the given account.
     *
     * Generated from protobuf field <code>string xpub = 4;</code>
     * @return string
     */
    public function getXpub()
    {
        return $this->xpub;
    }

    /**
     *The extended public key at depth 3 for the given account.
     *
     * Generated from protobuf field <code>string xpub = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setXpub($var)
    {
        GPBUtil::checkString($var, True);
        $this->xpub = $var;

        return $this;
    }

}

