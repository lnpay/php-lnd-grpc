<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.ListPaymentsRequest</code>
 */
class ListPaymentsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     **
     *If true, then return payments that have not yet fully completed. This means
     *that pending payments, as well as failed payments will show up if this
     *field is set to True.
     *
     * Generated from protobuf field <code>bool include_incomplete = 1;</code>
     */
    private $include_incomplete = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $include_incomplete
     *          *
     *          If true, then return payments that have not yet fully completed. This means
     *          that pending payments, as well as failed payments will show up if this
     *          field is set to True.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     **
     *If true, then return payments that have not yet fully completed. This means
     *that pending payments, as well as failed payments will show up if this
     *field is set to True.
     *
     * Generated from protobuf field <code>bool include_incomplete = 1;</code>
     * @return bool
     */
    public function getIncludeIncomplete()
    {
        return $this->include_incomplete;
    }

    /**
     **
     *If true, then return payments that have not yet fully completed. This means
     *that pending payments, as well as failed payments will show up if this
     *field is set to True.
     *
     * Generated from protobuf field <code>bool include_incomplete = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setIncludeIncomplete($var)
    {
        GPBUtil::checkBool($var);
        $this->include_incomplete = $var;

        return $this;
    }

}

