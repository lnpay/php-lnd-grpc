<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lightning.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.AbandonChannelRequest</code>
 */
class AbandonChannelRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.lnrpc.ChannelPoint channel_point = 1;</code>
     */
    protected $channel_point = null;
    /**
     * Generated from protobuf field <code>bool pending_funding_shim_only = 2;</code>
     */
    protected $pending_funding_shim_only = false;
    /**
     *Override the requirement for being in dev mode by setting this to true and
     *confirming the user knows what they are doing and this is a potential foot
     *gun to lose funds if used on active channels.
     *
     * Generated from protobuf field <code>bool i_know_what_i_am_doing = 3;</code>
     */
    protected $i_know_what_i_am_doing = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Lnrpc\ChannelPoint $channel_point
     *     @type bool $pending_funding_shim_only
     *     @type bool $i_know_what_i_am_doing
     *          Override the requirement for being in dev mode by setting this to true and
     *          confirming the user knows what they are doing and this is a potential foot
     *          gun to lose funds if used on active channels.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Lightning::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.lnrpc.ChannelPoint channel_point = 1;</code>
     * @return \Lnrpc\ChannelPoint|null
     */
    public function getChannelPoint()
    {
        return $this->channel_point;
    }

    public function hasChannelPoint()
    {
        return isset($this->channel_point);
    }

    public function clearChannelPoint()
    {
        unset($this->channel_point);
    }

    /**
     * Generated from protobuf field <code>.lnrpc.ChannelPoint channel_point = 1;</code>
     * @param \Lnrpc\ChannelPoint $var
     * @return $this
     */
    public function setChannelPoint($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\ChannelPoint::class);
        $this->channel_point = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool pending_funding_shim_only = 2;</code>
     * @return bool
     */
    public function getPendingFundingShimOnly()
    {
        return $this->pending_funding_shim_only;
    }

    /**
     * Generated from protobuf field <code>bool pending_funding_shim_only = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setPendingFundingShimOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->pending_funding_shim_only = $var;

        return $this;
    }

    /**
     *Override the requirement for being in dev mode by setting this to true and
     *confirming the user knows what they are doing and this is a potential foot
     *gun to lose funds if used on active channels.
     *
     * Generated from protobuf field <code>bool i_know_what_i_am_doing = 3;</code>
     * @return bool
     */
    public function getIKnowWhatIAmDoing()
    {
        return $this->i_know_what_i_am_doing;
    }

    /**
     *Override the requirement for being in dev mode by setting this to true and
     *confirming the user knows what they are doing and this is a potential foot
     *gun to lose funds if used on active channels.
     *
     * Generated from protobuf field <code>bool i_know_what_i_am_doing = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIKnowWhatIAmDoing($var)
    {
        GPBUtil::checkBool($var);
        $this->i_know_what_i_am_doing = $var;

        return $this;
    }

}

