<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use UnexpectedValueException;

/**
 * Protobuf type <code>lnrpc.PaymentFailureReason</code>
 */
class PaymentFailureReason
{
    /**
     **
     *Payment isn't failed (yet).
     *
     * Generated from protobuf enum <code>FAILURE_REASON_NONE = 0;</code>
     */
    const FAILURE_REASON_NONE = 0;
    /**
     **
     *There are more routes to try, but the payment timeout was exceeded.
     *
     * Generated from protobuf enum <code>FAILURE_REASON_TIMEOUT = 1;</code>
     */
    const FAILURE_REASON_TIMEOUT = 1;
    /**
     **
     *All possible routes were tried and failed permanently. Or were no
     *routes to the destination at all.
     *
     * Generated from protobuf enum <code>FAILURE_REASON_NO_ROUTE = 2;</code>
     */
    const FAILURE_REASON_NO_ROUTE = 2;
    /**
     **
     *A non-recoverable error has occured.
     *
     * Generated from protobuf enum <code>FAILURE_REASON_ERROR = 3;</code>
     */
    const FAILURE_REASON_ERROR = 3;
    /**
     **
     *Payment details incorrect (unknown hash, invalid amt or
     *invalid final cltv delta)
     *
     * Generated from protobuf enum <code>FAILURE_REASON_INCORRECT_PAYMENT_DETAILS = 4;</code>
     */
    const FAILURE_REASON_INCORRECT_PAYMENT_DETAILS = 4;
    /**
     **
     *Insufficient local balance.
     *
     * Generated from protobuf enum <code>FAILURE_REASON_INSUFFICIENT_BALANCE = 5;</code>
     */
    const FAILURE_REASON_INSUFFICIENT_BALANCE = 5;

    private static $valueToName = [
        self::FAILURE_REASON_NONE => 'FAILURE_REASON_NONE',
        self::FAILURE_REASON_TIMEOUT => 'FAILURE_REASON_TIMEOUT',
        self::FAILURE_REASON_NO_ROUTE => 'FAILURE_REASON_NO_ROUTE',
        self::FAILURE_REASON_ERROR => 'FAILURE_REASON_ERROR',
        self::FAILURE_REASON_INCORRECT_PAYMENT_DETAILS => 'FAILURE_REASON_INCORRECT_PAYMENT_DETAILS',
        self::FAILURE_REASON_INSUFFICIENT_BALANCE => 'FAILURE_REASON_INSUFFICIENT_BALANCE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

