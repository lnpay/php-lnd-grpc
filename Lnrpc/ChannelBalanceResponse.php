<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lightning.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.ChannelBalanceResponse</code>
 */
class ChannelBalanceResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Deprecated. Sum of channels balances denominated in satoshis
     *
     * Generated from protobuf field <code>int64 balance = 1 [deprecated = true];</code>
     * @deprecated
     */
    protected $balance = 0;
    /**
     * Deprecated. Sum of channels pending balances denominated in satoshis
     *
     * Generated from protobuf field <code>int64 pending_open_balance = 2 [deprecated = true];</code>
     * @deprecated
     */
    protected $pending_open_balance = 0;
    /**
     * Sum of channels local balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount local_balance = 3;</code>
     */
    protected $local_balance = null;
    /**
     * Sum of channels remote balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount remote_balance = 4;</code>
     */
    protected $remote_balance = null;
    /**
     * Sum of channels local unsettled balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount unsettled_local_balance = 5;</code>
     */
    protected $unsettled_local_balance = null;
    /**
     * Sum of channels remote unsettled balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount unsettled_remote_balance = 6;</code>
     */
    protected $unsettled_remote_balance = null;
    /**
     * Sum of channels pending local balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount pending_open_local_balance = 7;</code>
     */
    protected $pending_open_local_balance = null;
    /**
     * Sum of channels pending remote balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount pending_open_remote_balance = 8;</code>
     */
    protected $pending_open_remote_balance = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $balance
     *           Deprecated. Sum of channels balances denominated in satoshis
     *     @type int|string $pending_open_balance
     *           Deprecated. Sum of channels pending balances denominated in satoshis
     *     @type \Lnrpc\Amount $local_balance
     *           Sum of channels local balances.
     *     @type \Lnrpc\Amount $remote_balance
     *           Sum of channels remote balances.
     *     @type \Lnrpc\Amount $unsettled_local_balance
     *           Sum of channels local unsettled balances.
     *     @type \Lnrpc\Amount $unsettled_remote_balance
     *           Sum of channels remote unsettled balances.
     *     @type \Lnrpc\Amount $pending_open_local_balance
     *           Sum of channels pending local balances.
     *     @type \Lnrpc\Amount $pending_open_remote_balance
     *           Sum of channels pending remote balances.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Lightning::initOnce();
        parent::__construct($data);
    }

    /**
     * Deprecated. Sum of channels balances denominated in satoshis
     *
     * Generated from protobuf field <code>int64 balance = 1 [deprecated = true];</code>
     * @return int|string
     * @deprecated
     */
    public function getBalance()
    {
        @trigger_error('balance is deprecated.', E_USER_DEPRECATED);
        return $this->balance;
    }

    /**
     * Deprecated. Sum of channels balances denominated in satoshis
     *
     * Generated from protobuf field <code>int64 balance = 1 [deprecated = true];</code>
     * @param int|string $var
     * @return $this
     * @deprecated
     */
    public function setBalance($var)
    {
        @trigger_error('balance is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkInt64($var);
        $this->balance = $var;

        return $this;
    }

    /**
     * Deprecated. Sum of channels pending balances denominated in satoshis
     *
     * Generated from protobuf field <code>int64 pending_open_balance = 2 [deprecated = true];</code>
     * @return int|string
     * @deprecated
     */
    public function getPendingOpenBalance()
    {
        @trigger_error('pending_open_balance is deprecated.', E_USER_DEPRECATED);
        return $this->pending_open_balance;
    }

    /**
     * Deprecated. Sum of channels pending balances denominated in satoshis
     *
     * Generated from protobuf field <code>int64 pending_open_balance = 2 [deprecated = true];</code>
     * @param int|string $var
     * @return $this
     * @deprecated
     */
    public function setPendingOpenBalance($var)
    {
        @trigger_error('pending_open_balance is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkInt64($var);
        $this->pending_open_balance = $var;

        return $this;
    }

    /**
     * Sum of channels local balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount local_balance = 3;</code>
     * @return \Lnrpc\Amount|null
     */
    public function getLocalBalance()
    {
        return $this->local_balance;
    }

    public function hasLocalBalance()
    {
        return isset($this->local_balance);
    }

    public function clearLocalBalance()
    {
        unset($this->local_balance);
    }

    /**
     * Sum of channels local balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount local_balance = 3;</code>
     * @param \Lnrpc\Amount $var
     * @return $this
     */
    public function setLocalBalance($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\Amount::class);
        $this->local_balance = $var;

        return $this;
    }

    /**
     * Sum of channels remote balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount remote_balance = 4;</code>
     * @return \Lnrpc\Amount|null
     */
    public function getRemoteBalance()
    {
        return $this->remote_balance;
    }

    public function hasRemoteBalance()
    {
        return isset($this->remote_balance);
    }

    public function clearRemoteBalance()
    {
        unset($this->remote_balance);
    }

    /**
     * Sum of channels remote balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount remote_balance = 4;</code>
     * @param \Lnrpc\Amount $var
     * @return $this
     */
    public function setRemoteBalance($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\Amount::class);
        $this->remote_balance = $var;

        return $this;
    }

    /**
     * Sum of channels local unsettled balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount unsettled_local_balance = 5;</code>
     * @return \Lnrpc\Amount|null
     */
    public function getUnsettledLocalBalance()
    {
        return $this->unsettled_local_balance;
    }

    public function hasUnsettledLocalBalance()
    {
        return isset($this->unsettled_local_balance);
    }

    public function clearUnsettledLocalBalance()
    {
        unset($this->unsettled_local_balance);
    }

    /**
     * Sum of channels local unsettled balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount unsettled_local_balance = 5;</code>
     * @param \Lnrpc\Amount $var
     * @return $this
     */
    public function setUnsettledLocalBalance($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\Amount::class);
        $this->unsettled_local_balance = $var;

        return $this;
    }

    /**
     * Sum of channels remote unsettled balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount unsettled_remote_balance = 6;</code>
     * @return \Lnrpc\Amount|null
     */
    public function getUnsettledRemoteBalance()
    {
        return $this->unsettled_remote_balance;
    }

    public function hasUnsettledRemoteBalance()
    {
        return isset($this->unsettled_remote_balance);
    }

    public function clearUnsettledRemoteBalance()
    {
        unset($this->unsettled_remote_balance);
    }

    /**
     * Sum of channels remote unsettled balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount unsettled_remote_balance = 6;</code>
     * @param \Lnrpc\Amount $var
     * @return $this
     */
    public function setUnsettledRemoteBalance($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\Amount::class);
        $this->unsettled_remote_balance = $var;

        return $this;
    }

    /**
     * Sum of channels pending local balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount pending_open_local_balance = 7;</code>
     * @return \Lnrpc\Amount|null
     */
    public function getPendingOpenLocalBalance()
    {
        return $this->pending_open_local_balance;
    }

    public function hasPendingOpenLocalBalance()
    {
        return isset($this->pending_open_local_balance);
    }

    public function clearPendingOpenLocalBalance()
    {
        unset($this->pending_open_local_balance);
    }

    /**
     * Sum of channels pending local balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount pending_open_local_balance = 7;</code>
     * @param \Lnrpc\Amount $var
     * @return $this
     */
    public function setPendingOpenLocalBalance($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\Amount::class);
        $this->pending_open_local_balance = $var;

        return $this;
    }

    /**
     * Sum of channels pending remote balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount pending_open_remote_balance = 8;</code>
     * @return \Lnrpc\Amount|null
     */
    public function getPendingOpenRemoteBalance()
    {
        return $this->pending_open_remote_balance;
    }

    public function hasPendingOpenRemoteBalance()
    {
        return isset($this->pending_open_remote_balance);
    }

    public function clearPendingOpenRemoteBalance()
    {
        unset($this->pending_open_remote_balance);
    }

    /**
     * Sum of channels pending remote balances.
     *
     * Generated from protobuf field <code>.lnrpc.Amount pending_open_remote_balance = 8;</code>
     * @param \Lnrpc\Amount $var
     * @return $this
     */
    public function setPendingOpenRemoteBalance($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\Amount::class);
        $this->pending_open_remote_balance = $var;

        return $this;
    }

}

