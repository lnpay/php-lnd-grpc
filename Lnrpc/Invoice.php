<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.Invoice</code>
 */
class Invoice extends \Google\Protobuf\Internal\Message
{
    /**
     **
     *An optional memo to attach along with the invoice. Used for record keeping
     *purposes for the invoice's creator, and will also be set in the description
     *field of the encoded payment request if the description_hash field is not
     *being used.
     *
     * Generated from protobuf field <code>string memo = 1;</code>
     */
    private $memo = '';
    /**
     **
     *The hex-encoded preimage (32 byte) which will allow settling an incoming
     *HTLC payable to this preimage. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes r_preimage = 3;</code>
     */
    private $r_preimage = '';
    /**
     **
     *The hash of the preimage. When using REST, this field must be encoded as
     *base64.
     *
     * Generated from protobuf field <code>bytes r_hash = 4;</code>
     */
    private $r_hash = '';
    /**
     **
     *The value of this invoice in satoshis
     *The fields value and value_msat are mutually exclusive.
     *
     * Generated from protobuf field <code>int64 value = 5;</code>
     */
    private $value = 0;
    /**
     **
     *The value of this invoice in millisatoshis
     *The fields value and value_msat are mutually exclusive.
     *
     * Generated from protobuf field <code>int64 value_msat = 23;</code>
     */
    private $value_msat = 0;
    /**
     *&#47; Whether this invoice has been fulfilled
     *
     * Generated from protobuf field <code>bool settled = 6 [deprecated = true];</code>
     */
    private $settled = false;
    /**
     *&#47; When this invoice was created
     *
     * Generated from protobuf field <code>int64 creation_date = 7;</code>
     */
    private $creation_date = 0;
    /**
     *&#47; When this invoice was settled
     *
     * Generated from protobuf field <code>int64 settle_date = 8;</code>
     */
    private $settle_date = 0;
    /**
     **
     *A bare-bones invoice for a payment within the Lightning Network. With the
     *details of the invoice, the sender has all the data necessary to send a
     *payment to the recipient.
     *
     * Generated from protobuf field <code>string payment_request = 9;</code>
     */
    private $payment_request = '';
    /**
     **
     *Hash (SHA-256) of a description of the payment. Used if the description of
     *payment (memo) is too long to naturally fit within the description field
     *of an encoded payment request. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes description_hash = 10;</code>
     */
    private $description_hash = '';
    /**
     *&#47; Payment request expiry time in seconds. Default is 3600 (1 hour).
     *
     * Generated from protobuf field <code>int64 expiry = 11;</code>
     */
    private $expiry = 0;
    /**
     *&#47; Fallback on-chain address.
     *
     * Generated from protobuf field <code>string fallback_addr = 12;</code>
     */
    private $fallback_addr = '';
    /**
     *&#47; Delta to use for the time-lock of the CLTV extended to the final hop.
     *
     * Generated from protobuf field <code>uint64 cltv_expiry = 13;</code>
     */
    private $cltv_expiry = 0;
    /**
     **
     *Route hints that can each be individually used to assist in reaching the
     *invoice's destination.
     *
     * Generated from protobuf field <code>repeated .lnrpc.RouteHint route_hints = 14;</code>
     */
    private $route_hints;
    /**
     *&#47; Whether this invoice should include routing hints for private channels.
     *
     * Generated from protobuf field <code>bool private = 15;</code>
     */
    private $private = false;
    /**
     **
     *The "add" index of this invoice. Each newly created invoice will increment
     *this index making it monotonically increasing. Callers to the
     *SubscribeInvoices call can use this to instantly get notified of all added
     *invoices with an add_index greater than this one.
     *
     * Generated from protobuf field <code>uint64 add_index = 16;</code>
     */
    private $add_index = 0;
    /**
     **
     *The "settle" index of this invoice. Each newly settled invoice will
     *increment this index making it monotonically increasing. Callers to the
     *SubscribeInvoices call can use this to instantly get notified of all
     *settled invoices with an settle_index greater than this one.
     *
     * Generated from protobuf field <code>uint64 settle_index = 17;</code>
     */
    private $settle_index = 0;
    /**
     *&#47; Deprecated, use amt_paid_sat or amt_paid_msat.
     *
     * Generated from protobuf field <code>int64 amt_paid = 18 [deprecated = true];</code>
     */
    private $amt_paid = 0;
    /**
     **
     *The amount that was accepted for this invoice, in satoshis. This will ONLY
     *be set if this invoice has been settled. We provide this field as if the
     *invoice was created with a zero value, then we need to record what amount
     *was ultimately accepted. Additionally, it's possible that the sender paid
     *MORE that was specified in the original invoice. So we'll record that here
     *as well.
     *
     * Generated from protobuf field <code>int64 amt_paid_sat = 19;</code>
     */
    private $amt_paid_sat = 0;
    /**
     **
     *The amount that was accepted for this invoice, in millisatoshis. This will
     *ONLY be set if this invoice has been settled. We provide this field as if
     *the invoice was created with a zero value, then we need to record what
     *amount was ultimately accepted. Additionally, it's possible that the sender
     *paid MORE that was specified in the original invoice. So we'll record that
     *here as well.
     *
     * Generated from protobuf field <code>int64 amt_paid_msat = 20;</code>
     */
    private $amt_paid_msat = 0;
    /**
     **
     *The state the invoice is in.
     *
     * Generated from protobuf field <code>.lnrpc.Invoice.InvoiceState state = 21;</code>
     */
    private $state = 0;
    /**
     *&#47; List of HTLCs paying to this invoice [EXPERIMENTAL].
     *
     * Generated from protobuf field <code>repeated .lnrpc.InvoiceHTLC htlcs = 22;</code>
     */
    private $htlcs;
    /**
     *&#47; List of features advertised on the invoice.
     *
     * Generated from protobuf field <code>map<uint32, .lnrpc.Feature> features = 24;</code>
     */
    private $features;
    /**
     **
     *Indicates if this invoice was a spontaneous payment that arrived via keysend
     *[EXPERIMENTAL].
     *
     * Generated from protobuf field <code>bool is_keysend = 25;</code>
     */
    private $is_keysend = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $memo
     *          *
     *          An optional memo to attach along with the invoice. Used for record keeping
     *          purposes for the invoice's creator, and will also be set in the description
     *          field of the encoded payment request if the description_hash field is not
     *          being used.
     *     @type string $r_preimage
     *          *
     *          The hex-encoded preimage (32 byte) which will allow settling an incoming
     *          HTLC payable to this preimage. When using REST, this field must be encoded
     *          as base64.
     *     @type string $r_hash
     *          *
     *          The hash of the preimage. When using REST, this field must be encoded as
     *          base64.
     *     @type int|string $value
     *          *
     *          The value of this invoice in satoshis
     *          The fields value and value_msat are mutually exclusive.
     *     @type int|string $value_msat
     *          *
     *          The value of this invoice in millisatoshis
     *          The fields value and value_msat are mutually exclusive.
     *     @type bool $settled
     *          &#47; Whether this invoice has been fulfilled
     *     @type int|string $creation_date
     *          &#47; When this invoice was created
     *     @type int|string $settle_date
     *          &#47; When this invoice was settled
     *     @type string $payment_request
     *          *
     *          A bare-bones invoice for a payment within the Lightning Network. With the
     *          details of the invoice, the sender has all the data necessary to send a
     *          payment to the recipient.
     *     @type string $description_hash
     *          *
     *          Hash (SHA-256) of a description of the payment. Used if the description of
     *          payment (memo) is too long to naturally fit within the description field
     *          of an encoded payment request. When using REST, this field must be encoded
     *          as base64.
     *     @type int|string $expiry
     *          &#47; Payment request expiry time in seconds. Default is 3600 (1 hour).
     *     @type string $fallback_addr
     *          &#47; Fallback on-chain address.
     *     @type int|string $cltv_expiry
     *          &#47; Delta to use for the time-lock of the CLTV extended to the final hop.
     *     @type \Lnrpc\RouteHint[]|\Google\Protobuf\Internal\RepeatedField $route_hints
     *          *
     *          Route hints that can each be individually used to assist in reaching the
     *          invoice's destination.
     *     @type bool $private
     *          &#47; Whether this invoice should include routing hints for private channels.
     *     @type int|string $add_index
     *          *
     *          The "add" index of this invoice. Each newly created invoice will increment
     *          this index making it monotonically increasing. Callers to the
     *          SubscribeInvoices call can use this to instantly get notified of all added
     *          invoices with an add_index greater than this one.
     *     @type int|string $settle_index
     *          *
     *          The "settle" index of this invoice. Each newly settled invoice will
     *          increment this index making it monotonically increasing. Callers to the
     *          SubscribeInvoices call can use this to instantly get notified of all
     *          settled invoices with an settle_index greater than this one.
     *     @type int|string $amt_paid
     *          &#47; Deprecated, use amt_paid_sat or amt_paid_msat.
     *     @type int|string $amt_paid_sat
     *          *
     *          The amount that was accepted for this invoice, in satoshis. This will ONLY
     *          be set if this invoice has been settled. We provide this field as if the
     *          invoice was created with a zero value, then we need to record what amount
     *          was ultimately accepted. Additionally, it's possible that the sender paid
     *          MORE that was specified in the original invoice. So we'll record that here
     *          as well.
     *     @type int|string $amt_paid_msat
     *          *
     *          The amount that was accepted for this invoice, in millisatoshis. This will
     *          ONLY be set if this invoice has been settled. We provide this field as if
     *          the invoice was created with a zero value, then we need to record what
     *          amount was ultimately accepted. Additionally, it's possible that the sender
     *          paid MORE that was specified in the original invoice. So we'll record that
     *          here as well.
     *     @type int $state
     *          *
     *          The state the invoice is in.
     *     @type \Lnrpc\InvoiceHTLC[]|\Google\Protobuf\Internal\RepeatedField $htlcs
     *          &#47; List of HTLCs paying to this invoice [EXPERIMENTAL].
     *     @type array|\Google\Protobuf\Internal\MapField $features
     *          &#47; List of features advertised on the invoice.
     *     @type bool $is_keysend
     *          *
     *          Indicates if this invoice was a spontaneous payment that arrived via keysend
     *          [EXPERIMENTAL].
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     **
     *An optional memo to attach along with the invoice. Used for record keeping
     *purposes for the invoice's creator, and will also be set in the description
     *field of the encoded payment request if the description_hash field is not
     *being used.
     *
     * Generated from protobuf field <code>string memo = 1;</code>
     * @return string
     */
    public function getMemo()
    {
        return $this->memo;
    }

    /**
     **
     *An optional memo to attach along with the invoice. Used for record keeping
     *purposes for the invoice's creator, and will also be set in the description
     *field of the encoded payment request if the description_hash field is not
     *being used.
     *
     * Generated from protobuf field <code>string memo = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setMemo($var)
    {
        GPBUtil::checkString($var, True);
        $this->memo = $var;

        return $this;
    }

    /**
     **
     *The hex-encoded preimage (32 byte) which will allow settling an incoming
     *HTLC payable to this preimage. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes r_preimage = 3;</code>
     * @return string
     */
    public function getRPreimage()
    {
        return $this->r_preimage;
    }

    /**
     **
     *The hex-encoded preimage (32 byte) which will allow settling an incoming
     *HTLC payable to this preimage. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes r_preimage = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRPreimage($var)
    {
        GPBUtil::checkString($var, False);
        $this->r_preimage = $var;

        return $this;
    }

    /**
     **
     *The hash of the preimage. When using REST, this field must be encoded as
     *base64.
     *
     * Generated from protobuf field <code>bytes r_hash = 4;</code>
     * @return string
     */
    public function getRHash()
    {
        return $this->r_hash;
    }

    /**
     **
     *The hash of the preimage. When using REST, this field must be encoded as
     *base64.
     *
     * Generated from protobuf field <code>bytes r_hash = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setRHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->r_hash = $var;

        return $this;
    }

    /**
     **
     *The value of this invoice in satoshis
     *The fields value and value_msat are mutually exclusive.
     *
     * Generated from protobuf field <code>int64 value = 5;</code>
     * @return int|string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     **
     *The value of this invoice in satoshis
     *The fields value and value_msat are mutually exclusive.
     *
     * Generated from protobuf field <code>int64 value = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkInt64($var);
        $this->value = $var;

        return $this;
    }

    /**
     **
     *The value of this invoice in millisatoshis
     *The fields value and value_msat are mutually exclusive.
     *
     * Generated from protobuf field <code>int64 value_msat = 23;</code>
     * @return int|string
     */
    public function getValueMsat()
    {
        return $this->value_msat;
    }

    /**
     **
     *The value of this invoice in millisatoshis
     *The fields value and value_msat are mutually exclusive.
     *
     * Generated from protobuf field <code>int64 value_msat = 23;</code>
     * @param int|string $var
     * @return $this
     */
    public function setValueMsat($var)
    {
        GPBUtil::checkInt64($var);
        $this->value_msat = $var;

        return $this;
    }

    /**
     *&#47; Whether this invoice has been fulfilled
     *
     * Generated from protobuf field <code>bool settled = 6 [deprecated = true];</code>
     * @return bool
     */
    public function getSettled()
    {
        return $this->settled;
    }

    /**
     *&#47; Whether this invoice has been fulfilled
     *
     * Generated from protobuf field <code>bool settled = 6 [deprecated = true];</code>
     * @param bool $var
     * @return $this
     */
    public function setSettled($var)
    {
        GPBUtil::checkBool($var);
        $this->settled = $var;

        return $this;
    }

    /**
     *&#47; When this invoice was created
     *
     * Generated from protobuf field <code>int64 creation_date = 7;</code>
     * @return int|string
     */
    public function getCreationDate()
    {
        return $this->creation_date;
    }

    /**
     *&#47; When this invoice was created
     *
     * Generated from protobuf field <code>int64 creation_date = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCreationDate($var)
    {
        GPBUtil::checkInt64($var);
        $this->creation_date = $var;

        return $this;
    }

    /**
     *&#47; When this invoice was settled
     *
     * Generated from protobuf field <code>int64 settle_date = 8;</code>
     * @return int|string
     */
    public function getSettleDate()
    {
        return $this->settle_date;
    }

    /**
     *&#47; When this invoice was settled
     *
     * Generated from protobuf field <code>int64 settle_date = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSettleDate($var)
    {
        GPBUtil::checkInt64($var);
        $this->settle_date = $var;

        return $this;
    }

    /**
     **
     *A bare-bones invoice for a payment within the Lightning Network. With the
     *details of the invoice, the sender has all the data necessary to send a
     *payment to the recipient.
     *
     * Generated from protobuf field <code>string payment_request = 9;</code>
     * @return string
     */
    public function getPaymentRequest()
    {
        return $this->payment_request;
    }

    /**
     **
     *A bare-bones invoice for a payment within the Lightning Network. With the
     *details of the invoice, the sender has all the data necessary to send a
     *payment to the recipient.
     *
     * Generated from protobuf field <code>string payment_request = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setPaymentRequest($var)
    {
        GPBUtil::checkString($var, True);
        $this->payment_request = $var;

        return $this;
    }

    /**
     **
     *Hash (SHA-256) of a description of the payment. Used if the description of
     *payment (memo) is too long to naturally fit within the description field
     *of an encoded payment request. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes description_hash = 10;</code>
     * @return string
     */
    public function getDescriptionHash()
    {
        return $this->description_hash;
    }

    /**
     **
     *Hash (SHA-256) of a description of the payment. Used if the description of
     *payment (memo) is too long to naturally fit within the description field
     *of an encoded payment request. When using REST, this field must be encoded
     *as base64.
     *
     * Generated from protobuf field <code>bytes description_hash = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setDescriptionHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->description_hash = $var;

        return $this;
    }

    /**
     *&#47; Payment request expiry time in seconds. Default is 3600 (1 hour).
     *
     * Generated from protobuf field <code>int64 expiry = 11;</code>
     * @return int|string
     */
    public function getExpiry()
    {
        return $this->expiry;
    }

    /**
     *&#47; Payment request expiry time in seconds. Default is 3600 (1 hour).
     *
     * Generated from protobuf field <code>int64 expiry = 11;</code>
     * @param int|string $var
     * @return $this
     */
    public function setExpiry($var)
    {
        GPBUtil::checkInt64($var);
        $this->expiry = $var;

        return $this;
    }

    /**
     *&#47; Fallback on-chain address.
     *
     * Generated from protobuf field <code>string fallback_addr = 12;</code>
     * @return string
     */
    public function getFallbackAddr()
    {
        return $this->fallback_addr;
    }

    /**
     *&#47; Fallback on-chain address.
     *
     * Generated from protobuf field <code>string fallback_addr = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setFallbackAddr($var)
    {
        GPBUtil::checkString($var, True);
        $this->fallback_addr = $var;

        return $this;
    }

    /**
     *&#47; Delta to use for the time-lock of the CLTV extended to the final hop.
     *
     * Generated from protobuf field <code>uint64 cltv_expiry = 13;</code>
     * @return int|string
     */
    public function getCltvExpiry()
    {
        return $this->cltv_expiry;
    }

    /**
     *&#47; Delta to use for the time-lock of the CLTV extended to the final hop.
     *
     * Generated from protobuf field <code>uint64 cltv_expiry = 13;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCltvExpiry($var)
    {
        GPBUtil::checkUint64($var);
        $this->cltv_expiry = $var;

        return $this;
    }

    /**
     **
     *Route hints that can each be individually used to assist in reaching the
     *invoice's destination.
     *
     * Generated from protobuf field <code>repeated .lnrpc.RouteHint route_hints = 14;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRouteHints()
    {
        return $this->route_hints;
    }

    /**
     **
     *Route hints that can each be individually used to assist in reaching the
     *invoice's destination.
     *
     * Generated from protobuf field <code>repeated .lnrpc.RouteHint route_hints = 14;</code>
     * @param \Lnrpc\RouteHint[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRouteHints($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Lnrpc\RouteHint::class);
        $this->route_hints = $arr;

        return $this;
    }

    /**
     *&#47; Whether this invoice should include routing hints for private channels.
     *
     * Generated from protobuf field <code>bool private = 15;</code>
     * @return bool
     */
    public function getPrivate()
    {
        return $this->private;
    }

    /**
     *&#47; Whether this invoice should include routing hints for private channels.
     *
     * Generated from protobuf field <code>bool private = 15;</code>
     * @param bool $var
     * @return $this
     */
    public function setPrivate($var)
    {
        GPBUtil::checkBool($var);
        $this->private = $var;

        return $this;
    }

    /**
     **
     *The "add" index of this invoice. Each newly created invoice will increment
     *this index making it monotonically increasing. Callers to the
     *SubscribeInvoices call can use this to instantly get notified of all added
     *invoices with an add_index greater than this one.
     *
     * Generated from protobuf field <code>uint64 add_index = 16;</code>
     * @return int|string
     */
    public function getAddIndex()
    {
        return $this->add_index;
    }

    /**
     **
     *The "add" index of this invoice. Each newly created invoice will increment
     *this index making it monotonically increasing. Callers to the
     *SubscribeInvoices call can use this to instantly get notified of all added
     *invoices with an add_index greater than this one.
     *
     * Generated from protobuf field <code>uint64 add_index = 16;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAddIndex($var)
    {
        GPBUtil::checkUint64($var);
        $this->add_index = $var;

        return $this;
    }

    /**
     **
     *The "settle" index of this invoice. Each newly settled invoice will
     *increment this index making it monotonically increasing. Callers to the
     *SubscribeInvoices call can use this to instantly get notified of all
     *settled invoices with an settle_index greater than this one.
     *
     * Generated from protobuf field <code>uint64 settle_index = 17;</code>
     * @return int|string
     */
    public function getSettleIndex()
    {
        return $this->settle_index;
    }

    /**
     **
     *The "settle" index of this invoice. Each newly settled invoice will
     *increment this index making it monotonically increasing. Callers to the
     *SubscribeInvoices call can use this to instantly get notified of all
     *settled invoices with an settle_index greater than this one.
     *
     * Generated from protobuf field <code>uint64 settle_index = 17;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSettleIndex($var)
    {
        GPBUtil::checkUint64($var);
        $this->settle_index = $var;

        return $this;
    }

    /**
     *&#47; Deprecated, use amt_paid_sat or amt_paid_msat.
     *
     * Generated from protobuf field <code>int64 amt_paid = 18 [deprecated = true];</code>
     * @return int|string
     */
    public function getAmtPaid()
    {
        return $this->amt_paid;
    }

    /**
     *&#47; Deprecated, use amt_paid_sat or amt_paid_msat.
     *
     * Generated from protobuf field <code>int64 amt_paid = 18 [deprecated = true];</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmtPaid($var)
    {
        GPBUtil::checkInt64($var);
        $this->amt_paid = $var;

        return $this;
    }

    /**
     **
     *The amount that was accepted for this invoice, in satoshis. This will ONLY
     *be set if this invoice has been settled. We provide this field as if the
     *invoice was created with a zero value, then we need to record what amount
     *was ultimately accepted. Additionally, it's possible that the sender paid
     *MORE that was specified in the original invoice. So we'll record that here
     *as well.
     *
     * Generated from protobuf field <code>int64 amt_paid_sat = 19;</code>
     * @return int|string
     */
    public function getAmtPaidSat()
    {
        return $this->amt_paid_sat;
    }

    /**
     **
     *The amount that was accepted for this invoice, in satoshis. This will ONLY
     *be set if this invoice has been settled. We provide this field as if the
     *invoice was created with a zero value, then we need to record what amount
     *was ultimately accepted. Additionally, it's possible that the sender paid
     *MORE that was specified in the original invoice. So we'll record that here
     *as well.
     *
     * Generated from protobuf field <code>int64 amt_paid_sat = 19;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmtPaidSat($var)
    {
        GPBUtil::checkInt64($var);
        $this->amt_paid_sat = $var;

        return $this;
    }

    /**
     **
     *The amount that was accepted for this invoice, in millisatoshis. This will
     *ONLY be set if this invoice has been settled. We provide this field as if
     *the invoice was created with a zero value, then we need to record what
     *amount was ultimately accepted. Additionally, it's possible that the sender
     *paid MORE that was specified in the original invoice. So we'll record that
     *here as well.
     *
     * Generated from protobuf field <code>int64 amt_paid_msat = 20;</code>
     * @return int|string
     */
    public function getAmtPaidMsat()
    {
        return $this->amt_paid_msat;
    }

    /**
     **
     *The amount that was accepted for this invoice, in millisatoshis. This will
     *ONLY be set if this invoice has been settled. We provide this field as if
     *the invoice was created with a zero value, then we need to record what
     *amount was ultimately accepted. Additionally, it's possible that the sender
     *paid MORE that was specified in the original invoice. So we'll record that
     *here as well.
     *
     * Generated from protobuf field <code>int64 amt_paid_msat = 20;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmtPaidMsat($var)
    {
        GPBUtil::checkInt64($var);
        $this->amt_paid_msat = $var;

        return $this;
    }

    /**
     **
     *The state the invoice is in.
     *
     * Generated from protobuf field <code>.lnrpc.Invoice.InvoiceState state = 21;</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     **
     *The state the invoice is in.
     *
     * Generated from protobuf field <code>.lnrpc.Invoice.InvoiceState state = 21;</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Lnrpc\Invoice_InvoiceState::class);
        $this->state = $var;

        return $this;
    }

    /**
     *&#47; List of HTLCs paying to this invoice [EXPERIMENTAL].
     *
     * Generated from protobuf field <code>repeated .lnrpc.InvoiceHTLC htlcs = 22;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getHtlcs()
    {
        return $this->htlcs;
    }

    /**
     *&#47; List of HTLCs paying to this invoice [EXPERIMENTAL].
     *
     * Generated from protobuf field <code>repeated .lnrpc.InvoiceHTLC htlcs = 22;</code>
     * @param \Lnrpc\InvoiceHTLC[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setHtlcs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Lnrpc\InvoiceHTLC::class);
        $this->htlcs = $arr;

        return $this;
    }

    /**
     *&#47; List of features advertised on the invoice.
     *
     * Generated from protobuf field <code>map<uint32, .lnrpc.Feature> features = 24;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getFeatures()
    {
        return $this->features;
    }

    /**
     *&#47; List of features advertised on the invoice.
     *
     * Generated from protobuf field <code>map<uint32, .lnrpc.Feature> features = 24;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setFeatures($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::UINT32, \Google\Protobuf\Internal\GPBType::MESSAGE, \Lnrpc\Feature::class);
        $this->features = $arr;

        return $this;
    }

    /**
     **
     *Indicates if this invoice was a spontaneous payment that arrived via keysend
     *[EXPERIMENTAL].
     *
     * Generated from protobuf field <code>bool is_keysend = 25;</code>
     * @return bool
     */
    public function getIsKeysend()
    {
        return $this->is_keysend;
    }

    /**
     **
     *Indicates if this invoice was a spontaneous payment that arrived via keysend
     *[EXPERIMENTAL].
     *
     * Generated from protobuf field <code>bool is_keysend = 25;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsKeysend($var)
    {
        GPBUtil::checkBool($var);
        $this->is_keysend = $var;

        return $this;
    }

}

