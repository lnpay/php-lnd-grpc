<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.PaymentHash</code>
 */
class PaymentHash extends \Google\Protobuf\Internal\Message
{
    /**
     *The hex-encoded payment hash of the invoice to be looked up. The passed
     *payment hash must be exactly 32 bytes, otherwise an error is returned.
     *Deprecated now that the REST gateway supports base64 encoding of bytes
     *fields.
     *
     * Generated from protobuf field <code>string r_hash_str = 1 [deprecated = true];</code>
     */
    private $r_hash_str = '';
    /**
     *The payment hash of the invoice to be looked up. When using REST, this field
     *must be encoded as base64.
     *
     * Generated from protobuf field <code>bytes r_hash = 2;</code>
     */
    private $r_hash = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $r_hash_str
     *          The hex-encoded payment hash of the invoice to be looked up. The passed
     *          payment hash must be exactly 32 bytes, otherwise an error is returned.
     *          Deprecated now that the REST gateway supports base64 encoding of bytes
     *          fields.
     *     @type string $r_hash
     *          The payment hash of the invoice to be looked up. When using REST, this field
     *          must be encoded as base64.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     *The hex-encoded payment hash of the invoice to be looked up. The passed
     *payment hash must be exactly 32 bytes, otherwise an error is returned.
     *Deprecated now that the REST gateway supports base64 encoding of bytes
     *fields.
     *
     * Generated from protobuf field <code>string r_hash_str = 1 [deprecated = true];</code>
     * @return string
     */
    public function getRHashStr()
    {
        return $this->r_hash_str;
    }

    /**
     *The hex-encoded payment hash of the invoice to be looked up. The passed
     *payment hash must be exactly 32 bytes, otherwise an error is returned.
     *Deprecated now that the REST gateway supports base64 encoding of bytes
     *fields.
     *
     * Generated from protobuf field <code>string r_hash_str = 1 [deprecated = true];</code>
     * @param string $var
     * @return $this
     */
    public function setRHashStr($var)
    {
        GPBUtil::checkString($var, True);
        $this->r_hash_str = $var;

        return $this;
    }

    /**
     *The payment hash of the invoice to be looked up. When using REST, this field
     *must be encoded as base64.
     *
     * Generated from protobuf field <code>bytes r_hash = 2;</code>
     * @return string
     */
    public function getRHash()
    {
        return $this->r_hash;
    }

    /**
     *The payment hash of the invoice to be looked up. When using REST, this field
     *must be encoded as base64.
     *
     * Generated from protobuf field <code>bytes r_hash = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->r_hash = $var;

        return $this;
    }

}

