<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.OpenStatusUpdate</code>
 */
class OpenStatusUpdate extends \Google\Protobuf\Internal\Message
{
    /**
     **
     *The pending channel ID of the created channel. This value may be used to
     *further the funding flow manually via the FundingStateStep method.
     *
     * Generated from protobuf field <code>bytes pending_chan_id = 4[json_name = "pending_chan_id"];</code>
     */
    private $pending_chan_id = '';
    protected $update;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Lnrpc\PendingUpdate $chan_pending
     *     @type \Lnrpc\ChannelOpenUpdate $chan_open
     *     @type string $pending_chan_id
     *          *
     *          The pending channel ID of the created channel. This value may be used to
     *          further the funding flow manually via the FundingStateStep method.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     * @return \Lnrpc\PendingUpdate
     */
    public function getChanPending()
    {
        return $this->readOneof(1);
    }

    /**
     * Generated from protobuf field <code>.lnrpc.PendingUpdate chan_pending = 1[json_name = "chan_pending"];</code>
     * @param \Lnrpc\PendingUpdate $var
     * @return $this
     */
    public function setChanPending($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\PendingUpdate::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     * @return \Lnrpc\ChannelOpenUpdate
     */
    public function getChanOpen()
    {
        return $this->readOneof(3);
    }

    /**
     * Generated from protobuf field <code>.lnrpc.ChannelOpenUpdate chan_open = 3[json_name = "chan_open"];</code>
     * @param \Lnrpc\ChannelOpenUpdate $var
     * @return $this
     */
    public function setChanOpen($var)
    {
        GPBUtil::checkMessage($var, \Lnrpc\ChannelOpenUpdate::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     **
     *The pending channel ID of the created channel. This value may be used to
     *further the funding flow manually via the FundingStateStep method.
     *
     * Generated from protobuf field <code>bytes pending_chan_id = 4[json_name = "pending_chan_id"];</code>
     * @return string
     */
    public function getPendingChanId()
    {
        return $this->pending_chan_id;
    }

    /**
     **
     *The pending channel ID of the created channel. This value may be used to
     *further the funding flow manually via the FundingStateStep method.
     *
     * Generated from protobuf field <code>bytes pending_chan_id = 4[json_name = "pending_chan_id"];</code>
     * @param string $var
     * @return $this
     */
    public function setPendingChanId($var)
    {
        GPBUtil::checkString($var, False);
        $this->pending_chan_id = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getUpdate()
    {
        return $this->whichOneof("update");
    }

}

