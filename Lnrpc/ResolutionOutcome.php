<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lightning.proto

namespace Lnrpc;

use UnexpectedValueException;

/**
 * Protobuf type <code>lnrpc.ResolutionOutcome</code>
 */
class ResolutionOutcome
{
    /**
     * Outcome unknown.
     *
     * Generated from protobuf enum <code>OUTCOME_UNKNOWN = 0;</code>
     */
    const OUTCOME_UNKNOWN = 0;
    /**
     * An output was claimed on chain.
     *
     * Generated from protobuf enum <code>CLAIMED = 1;</code>
     */
    const CLAIMED = 1;
    /**
     * An output was left unclaimed on chain.
     *
     * Generated from protobuf enum <code>UNCLAIMED = 2;</code>
     */
    const UNCLAIMED = 2;
    /**
     *ResolverOutcomeAbandoned indicates that an output that we did not
     *claim on chain, for example an anchor that we did not sweep and a
     *third party claimed on chain, or a htlc that we could not decode
     *so left unclaimed.
     *
     * Generated from protobuf enum <code>ABANDONED = 3;</code>
     */
    const ABANDONED = 3;
    /**
     *If we force closed our channel, our htlcs need to be claimed in two
     *stages. This outcome represents the broadcast of a timeout or success
     *transaction for this two stage htlc claim.
     *
     * Generated from protobuf enum <code>FIRST_STAGE = 4;</code>
     */
    const FIRST_STAGE = 4;
    /**
     * A htlc was timed out on chain.
     *
     * Generated from protobuf enum <code>TIMEOUT = 5;</code>
     */
    const TIMEOUT = 5;

    private static $valueToName = [
        self::OUTCOME_UNKNOWN => 'OUTCOME_UNKNOWN',
        self::CLAIMED => 'CLAIMED',
        self::UNCLAIMED => 'UNCLAIMED',
        self::ABANDONED => 'ABANDONED',
        self::FIRST_STAGE => 'FIRST_STAGE',
        self::TIMEOUT => 'TIMEOUT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

