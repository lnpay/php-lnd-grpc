<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lightning.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.ForwardingEvent</code>
 */
class ForwardingEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Timestamp is the time (unix epoch offset) that this circuit was
     * completed. Deprecated by timestamp_ns.
     *
     * Generated from protobuf field <code>uint64 timestamp = 1 [deprecated = true];</code>
     * @deprecated
     */
    protected $timestamp = 0;
    /**
     * The incoming channel ID that carried the HTLC that created the circuit.
     *
     * Generated from protobuf field <code>uint64 chan_id_in = 2 [jstype = JS_STRING];</code>
     */
    protected $chan_id_in = 0;
    /**
     * The outgoing channel ID that carried the preimage that completed the
     * circuit.
     *
     * Generated from protobuf field <code>uint64 chan_id_out = 4 [jstype = JS_STRING];</code>
     */
    protected $chan_id_out = 0;
    /**
     * The total amount (in satoshis) of the incoming HTLC that created half
     * the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_in = 5;</code>
     */
    protected $amt_in = 0;
    /**
     * The total amount (in satoshis) of the outgoing HTLC that created the
     * second half of the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_out = 6;</code>
     */
    protected $amt_out = 0;
    /**
     * The total fee (in satoshis) that this payment circuit carried.
     *
     * Generated from protobuf field <code>uint64 fee = 7;</code>
     */
    protected $fee = 0;
    /**
     * The total fee (in milli-satoshis) that this payment circuit carried.
     *
     * Generated from protobuf field <code>uint64 fee_msat = 8;</code>
     */
    protected $fee_msat = 0;
    /**
     * The total amount (in milli-satoshis) of the incoming HTLC that created
     * half the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_in_msat = 9;</code>
     */
    protected $amt_in_msat = 0;
    /**
     * The total amount (in milli-satoshis) of the outgoing HTLC that created
     * the second half of the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_out_msat = 10;</code>
     */
    protected $amt_out_msat = 0;
    /**
     * The number of nanoseconds elapsed since January 1, 1970 UTC when this
     * circuit was completed.
     *
     * Generated from protobuf field <code>uint64 timestamp_ns = 11;</code>
     */
    protected $timestamp_ns = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $timestamp
     *           Timestamp is the time (unix epoch offset) that this circuit was
     *           completed. Deprecated by timestamp_ns.
     *     @type int|string $chan_id_in
     *           The incoming channel ID that carried the HTLC that created the circuit.
     *     @type int|string $chan_id_out
     *           The outgoing channel ID that carried the preimage that completed the
     *           circuit.
     *     @type int|string $amt_in
     *           The total amount (in satoshis) of the incoming HTLC that created half
     *           the circuit.
     *     @type int|string $amt_out
     *           The total amount (in satoshis) of the outgoing HTLC that created the
     *           second half of the circuit.
     *     @type int|string $fee
     *           The total fee (in satoshis) that this payment circuit carried.
     *     @type int|string $fee_msat
     *           The total fee (in milli-satoshis) that this payment circuit carried.
     *     @type int|string $amt_in_msat
     *           The total amount (in milli-satoshis) of the incoming HTLC that created
     *           half the circuit.
     *     @type int|string $amt_out_msat
     *           The total amount (in milli-satoshis) of the outgoing HTLC that created
     *           the second half of the circuit.
     *     @type int|string $timestamp_ns
     *           The number of nanoseconds elapsed since January 1, 1970 UTC when this
     *           circuit was completed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Lightning::initOnce();
        parent::__construct($data);
    }

    /**
     * Timestamp is the time (unix epoch offset) that this circuit was
     * completed. Deprecated by timestamp_ns.
     *
     * Generated from protobuf field <code>uint64 timestamp = 1 [deprecated = true];</code>
     * @return int|string
     * @deprecated
     */
    public function getTimestamp()
    {
        @trigger_error('timestamp is deprecated.', E_USER_DEPRECATED);
        return $this->timestamp;
    }

    /**
     * Timestamp is the time (unix epoch offset) that this circuit was
     * completed. Deprecated by timestamp_ns.
     *
     * Generated from protobuf field <code>uint64 timestamp = 1 [deprecated = true];</code>
     * @param int|string $var
     * @return $this
     * @deprecated
     */
    public function setTimestamp($var)
    {
        @trigger_error('timestamp is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkUint64($var);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * The incoming channel ID that carried the HTLC that created the circuit.
     *
     * Generated from protobuf field <code>uint64 chan_id_in = 2 [jstype = JS_STRING];</code>
     * @return int|string
     */
    public function getChanIdIn()
    {
        return $this->chan_id_in;
    }

    /**
     * The incoming channel ID that carried the HTLC that created the circuit.
     *
     * Generated from protobuf field <code>uint64 chan_id_in = 2 [jstype = JS_STRING];</code>
     * @param int|string $var
     * @return $this
     */
    public function setChanIdIn($var)
    {
        GPBUtil::checkUint64($var);
        $this->chan_id_in = $var;

        return $this;
    }

    /**
     * The outgoing channel ID that carried the preimage that completed the
     * circuit.
     *
     * Generated from protobuf field <code>uint64 chan_id_out = 4 [jstype = JS_STRING];</code>
     * @return int|string
     */
    public function getChanIdOut()
    {
        return $this->chan_id_out;
    }

    /**
     * The outgoing channel ID that carried the preimage that completed the
     * circuit.
     *
     * Generated from protobuf field <code>uint64 chan_id_out = 4 [jstype = JS_STRING];</code>
     * @param int|string $var
     * @return $this
     */
    public function setChanIdOut($var)
    {
        GPBUtil::checkUint64($var);
        $this->chan_id_out = $var;

        return $this;
    }

    /**
     * The total amount (in satoshis) of the incoming HTLC that created half
     * the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_in = 5;</code>
     * @return int|string
     */
    public function getAmtIn()
    {
        return $this->amt_in;
    }

    /**
     * The total amount (in satoshis) of the incoming HTLC that created half
     * the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_in = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmtIn($var)
    {
        GPBUtil::checkUint64($var);
        $this->amt_in = $var;

        return $this;
    }

    /**
     * The total amount (in satoshis) of the outgoing HTLC that created the
     * second half of the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_out = 6;</code>
     * @return int|string
     */
    public function getAmtOut()
    {
        return $this->amt_out;
    }

    /**
     * The total amount (in satoshis) of the outgoing HTLC that created the
     * second half of the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_out = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmtOut($var)
    {
        GPBUtil::checkUint64($var);
        $this->amt_out = $var;

        return $this;
    }

    /**
     * The total fee (in satoshis) that this payment circuit carried.
     *
     * Generated from protobuf field <code>uint64 fee = 7;</code>
     * @return int|string
     */
    public function getFee()
    {
        return $this->fee;
    }

    /**
     * The total fee (in satoshis) that this payment circuit carried.
     *
     * Generated from protobuf field <code>uint64 fee = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setFee($var)
    {
        GPBUtil::checkUint64($var);
        $this->fee = $var;

        return $this;
    }

    /**
     * The total fee (in milli-satoshis) that this payment circuit carried.
     *
     * Generated from protobuf field <code>uint64 fee_msat = 8;</code>
     * @return int|string
     */
    public function getFeeMsat()
    {
        return $this->fee_msat;
    }

    /**
     * The total fee (in milli-satoshis) that this payment circuit carried.
     *
     * Generated from protobuf field <code>uint64 fee_msat = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setFeeMsat($var)
    {
        GPBUtil::checkUint64($var);
        $this->fee_msat = $var;

        return $this;
    }

    /**
     * The total amount (in milli-satoshis) of the incoming HTLC that created
     * half the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_in_msat = 9;</code>
     * @return int|string
     */
    public function getAmtInMsat()
    {
        return $this->amt_in_msat;
    }

    /**
     * The total amount (in milli-satoshis) of the incoming HTLC that created
     * half the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_in_msat = 9;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmtInMsat($var)
    {
        GPBUtil::checkUint64($var);
        $this->amt_in_msat = $var;

        return $this;
    }

    /**
     * The total amount (in milli-satoshis) of the outgoing HTLC that created
     * the second half of the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_out_msat = 10;</code>
     * @return int|string
     */
    public function getAmtOutMsat()
    {
        return $this->amt_out_msat;
    }

    /**
     * The total amount (in milli-satoshis) of the outgoing HTLC that created
     * the second half of the circuit.
     *
     * Generated from protobuf field <code>uint64 amt_out_msat = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmtOutMsat($var)
    {
        GPBUtil::checkUint64($var);
        $this->amt_out_msat = $var;

        return $this;
    }

    /**
     * The number of nanoseconds elapsed since January 1, 1970 UTC when this
     * circuit was completed.
     *
     * Generated from protobuf field <code>uint64 timestamp_ns = 11;</code>
     * @return int|string
     */
    public function getTimestampNs()
    {
        return $this->timestamp_ns;
    }

    /**
     * The number of nanoseconds elapsed since January 1, 1970 UTC when this
     * circuit was completed.
     *
     * Generated from protobuf field <code>uint64 timestamp_ns = 11;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimestampNs($var)
    {
        GPBUtil::checkUint64($var);
        $this->timestamp_ns = $var;

        return $this;
    }

}

