<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.MultiChanBackup</code>
 */
class MultiChanBackup extends \Google\Protobuf\Internal\Message
{
    /**
     **
     *Is the set of all channels that are included in this multi-channel backup.
     *
     * Generated from protobuf field <code>repeated .lnrpc.ChannelPoint chan_points = 1[json_name = "chan_points"];</code>
     */
    private $chan_points;
    /**
     **
     *A single encrypted blob containing all the static channel backups of the
     *channel listed above. This can be stored as a single file or blob, and
     *safely be replaced with any prior/future versions. When using REST, this
     *field must be encoded as base64.
     *
     * Generated from protobuf field <code>bytes multi_chan_backup = 2[json_name = "multi_chan_backup"];</code>
     */
    private $multi_chan_backup = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Lnrpc\ChannelPoint[]|\Google\Protobuf\Internal\RepeatedField $chan_points
     *          *
     *          Is the set of all channels that are included in this multi-channel backup.
     *     @type string $multi_chan_backup
     *          *
     *          A single encrypted blob containing all the static channel backups of the
     *          channel listed above. This can be stored as a single file or blob, and
     *          safely be replaced with any prior/future versions. When using REST, this
     *          field must be encoded as base64.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     **
     *Is the set of all channels that are included in this multi-channel backup.
     *
     * Generated from protobuf field <code>repeated .lnrpc.ChannelPoint chan_points = 1[json_name = "chan_points"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getChanPoints()
    {
        return $this->chan_points;
    }

    /**
     **
     *Is the set of all channels that are included in this multi-channel backup.
     *
     * Generated from protobuf field <code>repeated .lnrpc.ChannelPoint chan_points = 1[json_name = "chan_points"];</code>
     * @param \Lnrpc\ChannelPoint[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setChanPoints($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Lnrpc\ChannelPoint::class);
        $this->chan_points = $arr;

        return $this;
    }

    /**
     **
     *A single encrypted blob containing all the static channel backups of the
     *channel listed above. This can be stored as a single file or blob, and
     *safely be replaced with any prior/future versions. When using REST, this
     *field must be encoded as base64.
     *
     * Generated from protobuf field <code>bytes multi_chan_backup = 2[json_name = "multi_chan_backup"];</code>
     * @return string
     */
    public function getMultiChanBackup()
    {
        return $this->multi_chan_backup;
    }

    /**
     **
     *A single encrypted blob containing all the static channel backups of the
     *channel listed above. This can be stored as a single file or blob, and
     *safely be replaced with any prior/future versions. When using REST, this
     *field must be encoded as base64.
     *
     * Generated from protobuf field <code>bytes multi_chan_backup = 2[json_name = "multi_chan_backup"];</code>
     * @param string $var
     * @return $this
     */
    public function setMultiChanBackup($var)
    {
        GPBUtil::checkString($var, False);
        $this->multi_chan_backup = $var;

        return $this;
    }

}

