<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: router.proto

namespace Routerrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>routerrpc.ForwardHtlcInterceptRequest</code>
 */
class ForwardHtlcInterceptRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *The key of this forwarded htlc. It defines the incoming channel id and
     *the index in this channel.
     *
     * Generated from protobuf field <code>.routerrpc.CircuitKey incoming_circuit_key = 1;</code>
     */
    protected $incoming_circuit_key = null;
    /**
     * The incoming htlc amount.
     *
     * Generated from protobuf field <code>uint64 incoming_amount_msat = 5;</code>
     */
    protected $incoming_amount_msat = 0;
    /**
     * The incoming htlc expiry.
     *
     * Generated from protobuf field <code>uint32 incoming_expiry = 6;</code>
     */
    protected $incoming_expiry = 0;
    /**
     *The htlc payment hash. This value is not guaranteed to be unique per
     *request.
     *
     * Generated from protobuf field <code>bytes payment_hash = 2;</code>
     */
    protected $payment_hash = '';
    /**
     * The requested outgoing channel id for this forwarded htlc. Because of
     * non-strict forwarding, this isn't necessarily the channel over which the
     * packet will be forwarded eventually. A different channel to the same peer
     * may be selected as well.
     *
     * Generated from protobuf field <code>uint64 outgoing_requested_chan_id = 7;</code>
     */
    protected $outgoing_requested_chan_id = 0;
    /**
     * The outgoing htlc amount.
     *
     * Generated from protobuf field <code>uint64 outgoing_amount_msat = 3;</code>
     */
    protected $outgoing_amount_msat = 0;
    /**
     * The outgoing htlc expiry.
     *
     * Generated from protobuf field <code>uint32 outgoing_expiry = 4;</code>
     */
    protected $outgoing_expiry = 0;
    /**
     * Any custom records that were present in the payload.
     *
     * Generated from protobuf field <code>map<uint64, bytes> custom_records = 8;</code>
     */
    private $custom_records;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Routerrpc\CircuitKey $incoming_circuit_key
     *          The key of this forwarded htlc. It defines the incoming channel id and
     *          the index in this channel.
     *     @type int|string $incoming_amount_msat
     *           The incoming htlc amount.
     *     @type int $incoming_expiry
     *           The incoming htlc expiry.
     *     @type string $payment_hash
     *          The htlc payment hash. This value is not guaranteed to be unique per
     *          request.
     *     @type int|string $outgoing_requested_chan_id
     *           The requested outgoing channel id for this forwarded htlc. Because of
     *           non-strict forwarding, this isn't necessarily the channel over which the
     *           packet will be forwarded eventually. A different channel to the same peer
     *           may be selected as well.
     *     @type int|string $outgoing_amount_msat
     *           The outgoing htlc amount.
     *     @type int $outgoing_expiry
     *           The outgoing htlc expiry.
     *     @type array|\Google\Protobuf\Internal\MapField $custom_records
     *           Any custom records that were present in the payload.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Router::initOnce();
        parent::__construct($data);
    }

    /**
     *The key of this forwarded htlc. It defines the incoming channel id and
     *the index in this channel.
     *
     * Generated from protobuf field <code>.routerrpc.CircuitKey incoming_circuit_key = 1;</code>
     * @return \Routerrpc\CircuitKey
     */
    public function getIncomingCircuitKey()
    {
        return isset($this->incoming_circuit_key) ? $this->incoming_circuit_key : null;
    }

    public function hasIncomingCircuitKey()
    {
        return isset($this->incoming_circuit_key);
    }

    public function clearIncomingCircuitKey()
    {
        unset($this->incoming_circuit_key);
    }

    /**
     *The key of this forwarded htlc. It defines the incoming channel id and
     *the index in this channel.
     *
     * Generated from protobuf field <code>.routerrpc.CircuitKey incoming_circuit_key = 1;</code>
     * @param \Routerrpc\CircuitKey $var
     * @return $this
     */
    public function setIncomingCircuitKey($var)
    {
        GPBUtil::checkMessage($var, \Routerrpc\CircuitKey::class);
        $this->incoming_circuit_key = $var;

        return $this;
    }

    /**
     * The incoming htlc amount.
     *
     * Generated from protobuf field <code>uint64 incoming_amount_msat = 5;</code>
     * @return int|string
     */
    public function getIncomingAmountMsat()
    {
        return $this->incoming_amount_msat;
    }

    /**
     * The incoming htlc amount.
     *
     * Generated from protobuf field <code>uint64 incoming_amount_msat = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIncomingAmountMsat($var)
    {
        GPBUtil::checkUint64($var);
        $this->incoming_amount_msat = $var;

        return $this;
    }

    /**
     * The incoming htlc expiry.
     *
     * Generated from protobuf field <code>uint32 incoming_expiry = 6;</code>
     * @return int
     */
    public function getIncomingExpiry()
    {
        return $this->incoming_expiry;
    }

    /**
     * The incoming htlc expiry.
     *
     * Generated from protobuf field <code>uint32 incoming_expiry = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setIncomingExpiry($var)
    {
        GPBUtil::checkUint32($var);
        $this->incoming_expiry = $var;

        return $this;
    }

    /**
     *The htlc payment hash. This value is not guaranteed to be unique per
     *request.
     *
     * Generated from protobuf field <code>bytes payment_hash = 2;</code>
     * @return string
     */
    public function getPaymentHash()
    {
        return $this->payment_hash;
    }

    /**
     *The htlc payment hash. This value is not guaranteed to be unique per
     *request.
     *
     * Generated from protobuf field <code>bytes payment_hash = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPaymentHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->payment_hash = $var;

        return $this;
    }

    /**
     * The requested outgoing channel id for this forwarded htlc. Because of
     * non-strict forwarding, this isn't necessarily the channel over which the
     * packet will be forwarded eventually. A different channel to the same peer
     * may be selected as well.
     *
     * Generated from protobuf field <code>uint64 outgoing_requested_chan_id = 7;</code>
     * @return int|string
     */
    public function getOutgoingRequestedChanId()
    {
        return $this->outgoing_requested_chan_id;
    }

    /**
     * The requested outgoing channel id for this forwarded htlc. Because of
     * non-strict forwarding, this isn't necessarily the channel over which the
     * packet will be forwarded eventually. A different channel to the same peer
     * may be selected as well.
     *
     * Generated from protobuf field <code>uint64 outgoing_requested_chan_id = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setOutgoingRequestedChanId($var)
    {
        GPBUtil::checkUint64($var);
        $this->outgoing_requested_chan_id = $var;

        return $this;
    }

    /**
     * The outgoing htlc amount.
     *
     * Generated from protobuf field <code>uint64 outgoing_amount_msat = 3;</code>
     * @return int|string
     */
    public function getOutgoingAmountMsat()
    {
        return $this->outgoing_amount_msat;
    }

    /**
     * The outgoing htlc amount.
     *
     * Generated from protobuf field <code>uint64 outgoing_amount_msat = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setOutgoingAmountMsat($var)
    {
        GPBUtil::checkUint64($var);
        $this->outgoing_amount_msat = $var;

        return $this;
    }

    /**
     * The outgoing htlc expiry.
     *
     * Generated from protobuf field <code>uint32 outgoing_expiry = 4;</code>
     * @return int
     */
    public function getOutgoingExpiry()
    {
        return $this->outgoing_expiry;
    }

    /**
     * The outgoing htlc expiry.
     *
     * Generated from protobuf field <code>uint32 outgoing_expiry = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setOutgoingExpiry($var)
    {
        GPBUtil::checkUint32($var);
        $this->outgoing_expiry = $var;

        return $this;
    }

    /**
     * Any custom records that were present in the payload.
     *
     * Generated from protobuf field <code>map<uint64, bytes> custom_records = 8;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getCustomRecords()
    {
        return $this->custom_records;
    }

    /**
     * Any custom records that were present in the payload.
     *
     * Generated from protobuf field <code>map<uint64, bytes> custom_records = 8;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setCustomRecords($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::UINT64, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->custom_records = $arr;

        return $this;
    }

}

