<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: wtclient.proto

namespace Wtclientrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>wtclientrpc.PolicyResponse</code>
 */
class PolicyResponse extends \Google\Protobuf\Internal\Message
{
    /**
     *The maximum number of updates each session we negotiate with watchtowers
     *should allow.
     *
     * Generated from protobuf field <code>uint32 max_updates = 1;</code>
     */
    protected $max_updates = 0;
    /**
     *Deprecated, use sweep_sat_per_vbyte.
     *The fee rate, in satoshis per vbyte, that will be used by watchtowers for
     *justice transactions in response to channel breaches.
     *
     * Generated from protobuf field <code>uint32 sweep_sat_per_byte = 2 [deprecated = true];</code>
     * @deprecated
     */
    protected $sweep_sat_per_byte = 0;
    /**
     *The fee rate, in satoshis per vbyte, that will be used by watchtowers for
     *justice transactions in response to channel breaches.
     *
     * Generated from protobuf field <code>uint32 sweep_sat_per_vbyte = 3;</code>
     */
    protected $sweep_sat_per_vbyte = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_updates
     *          The maximum number of updates each session we negotiate with watchtowers
     *          should allow.
     *     @type int $sweep_sat_per_byte
     *          Deprecated, use sweep_sat_per_vbyte.
     *          The fee rate, in satoshis per vbyte, that will be used by watchtowers for
     *          justice transactions in response to channel breaches.
     *     @type int $sweep_sat_per_vbyte
     *          The fee rate, in satoshis per vbyte, that will be used by watchtowers for
     *          justice transactions in response to channel breaches.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Wtclient::initOnce();
        parent::__construct($data);
    }

    /**
     *The maximum number of updates each session we negotiate with watchtowers
     *should allow.
     *
     * Generated from protobuf field <code>uint32 max_updates = 1;</code>
     * @return int
     */
    public function getMaxUpdates()
    {
        return $this->max_updates;
    }

    /**
     *The maximum number of updates each session we negotiate with watchtowers
     *should allow.
     *
     * Generated from protobuf field <code>uint32 max_updates = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxUpdates($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_updates = $var;

        return $this;
    }

    /**
     *Deprecated, use sweep_sat_per_vbyte.
     *The fee rate, in satoshis per vbyte, that will be used by watchtowers for
     *justice transactions in response to channel breaches.
     *
     * Generated from protobuf field <code>uint32 sweep_sat_per_byte = 2 [deprecated = true];</code>
     * @return int
     * @deprecated
     */
    public function getSweepSatPerByte()
    {
        @trigger_error('sweep_sat_per_byte is deprecated.', E_USER_DEPRECATED);
        return $this->sweep_sat_per_byte;
    }

    /**
     *Deprecated, use sweep_sat_per_vbyte.
     *The fee rate, in satoshis per vbyte, that will be used by watchtowers for
     *justice transactions in response to channel breaches.
     *
     * Generated from protobuf field <code>uint32 sweep_sat_per_byte = 2 [deprecated = true];</code>
     * @param int $var
     * @return $this
     * @deprecated
     */
    public function setSweepSatPerByte($var)
    {
        @trigger_error('sweep_sat_per_byte is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkUint32($var);
        $this->sweep_sat_per_byte = $var;

        return $this;
    }

    /**
     *The fee rate, in satoshis per vbyte, that will be used by watchtowers for
     *justice transactions in response to channel breaches.
     *
     * Generated from protobuf field <code>uint32 sweep_sat_per_vbyte = 3;</code>
     * @return int
     */
    public function getSweepSatPerVbyte()
    {
        return $this->sweep_sat_per_vbyte;
    }

    /**
     *The fee rate, in satoshis per vbyte, that will be used by watchtowers for
     *justice transactions in response to channel breaches.
     *
     * Generated from protobuf field <code>uint32 sweep_sat_per_vbyte = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setSweepSatPerVbyte($var)
    {
        GPBUtil::checkUint32($var);
        $this->sweep_sat_per_vbyte = $var;

        return $this;
    }

}

